

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Apr 20 12:28:44 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212                           
   213                           	psect	idataBANK0
   214  0214                     __pidataBANK0:
   215                           
   216                           ;initializer for _tabla
   217  0214  343F               	retlw	63
   218  0215  3406               	retlw	6
   219  0216  345B               	retlw	91
   220  0217  344F               	retlw	79
   221  0218  3466               	retlw	102
   222  0219  346D               	retlw	109
   223  021A  347D               	retlw	125
   224  021B  3407               	retlw	7
   225  021C  347F               	retlw	127
   226  021D  346F               	retlw	111
   227  0006                     _PORTB	set	6
   228  0005                     _PORTA	set	5
   229  001E                     _ADRESH	set	30
   230  0007                     _PORTC	set	7
   231  001F                     _ADCON0bits	set	31
   232  000C                     _PIR1bits	set	12
   233  0001                     _TMR0	set	1
   234  000B                     _INTCONbits	set	11
   235  0008                     _PORTD	set	8
   236  0006                     _PORTBbits	set	6
   237  005A                     _T0IF	set	90
   238  009F                     _ADCON1bits	set	159
   239  008C                     _PIE1bits	set	140
   240  0081                     _OPTION_REGbits	set	129
   241  008F                     _OSCCONbits	set	143
   242  0088                     _TRISD	set	136
   243  0087                     _TRISC	set	135
   244  0086                     _TRISBbits	set	134
   245  0085                     _TRISAbits	set	133
   246  0189                     _ANSELH	set	393
   247  0188                     _ANSEL	set	392
   248                           
   249                           	psect	cinit
   250  0011                     start_initialization:	
   251                           ; #config settings
   252                           
   253  0011                     __initialization:
   254                           
   255                           ; Initialize objects allocated to BANK0
   256  0011  1383               	bcf	3,7	;select IRP bank0
   257  0012  3035               	movlw	low (__pdataBANK0+10)
   258  0013  00FD               	movwf	btemp+-1
   259  0014  3002               	movlw	high __pidataBANK0
   260  0015  00FE               	movwf	btemp
   261  0016  3014               	movlw	low __pidataBANK0
   262  0017  00FF               	movwf	btemp+1
   263  0018  302B               	movlw	low __pdataBANK0
   264  0019  0084               	movwf	4
   265  001A  120A  118A  2205  120A  118A  	fcall	init_ram0
   266                           
   267                           ; Clear objects allocated to BANK0
   268  001F  01B5               	clrf	__pbssBANK0& (0+127)
   269  0020  01B6               	clrf	(__pbssBANK0+1)& (0+127)
   270  0021  01B7               	clrf	(__pbssBANK0+2)& (0+127)
   271  0022  01B8               	clrf	(__pbssBANK0+3)& (0+127)
   272                           
   273                           ; Clear objects allocated to COMMON
   274  0023  01F6               	clrf	__pbssCOMMON& (0+127)
   275  0024  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   276  0025  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   277  0026  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   278  0027                     end_of_initialization:	
   279                           ;End of C runtime variable initialization code
   280                           
   281  0027                     __end_of__initialization:
   282  0027  0183               	clrf	3
   283  0028  120A  118A  29D3   	ljmp	_main	;jump to C main() function
   284                           
   285                           	psect	bssCOMMON
   286  0076                     __pbssCOMMON:
   287  0076                     _contador:
   288  0076                     	ds	1
   289  0077                     _res:
   290  0077                     	ds	1
   291  0078                     _decenas:
   292  0078                     	ds	1
   293  0079                     _centenas:
   294  0079                     	ds	1
   295                           
   296                           	psect	bssBANK0
   297  0035                     __pbssBANK0:
   298  0035                     _multi:
   299  0035                     	ds	2
   300  0037                     _pot2:
   301  0037                     	ds	1
   302  0038                     _unidades:
   303  0038                     	ds	1
   304                           
   305                           	psect	dataBANK0
   306  002B                     __pdataBANK0:
   307  002B                     _tabla:
   308  002B                     	ds	10
   309                           
   310                           	psect	inittext
   311  0201                     init_fetch0:	
   312                           ;	Called with low address in FSR and high address in W
   313                           
   314  0201  087E               	movf	btemp,w
   315  0202  008A               	movwf	10
   316  0203  087F               	movf	btemp+1,w
   317  0204  0082               	movwf	2
   318  0205                     init_ram0:	
   319                           ;Called with:
   320                           ;	high address of idata address in btemp 
   321                           ;	low address of idata address in btemp+1 
   322                           ;	low address of data in FSR
   323                           ;	high address + 1 of data in btemp-1
   324                           
   325  0205  120A  118A  2201  120A  118A  	fcall	init_fetch0
   326  020A  0080               	movwf	0
   327  020B  0A84               	incf	4,f
   328  020C  0804               	movf	4,w
   329  020D  067D               	xorwf	btemp+-1,w
   330  020E  1903               	btfsc	3,2
   331  020F  3400               	retlw	0
   332  0210  0AFF               	incf	btemp+1,f
   333  0211  1903               	btfsc	3,2
   334  0212  0AFE               	incf	btemp,f
   335  0213  2A05               	goto	init_ram0
   336                           
   337                           	psect	cstackCOMMON
   338  0070                     __pcstackCOMMON:
   339  0070                     ?_setup:
   340  0070                     ?_division:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0070                     ?_isr:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0070                     ??_isr:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0070                     ?_main:	
   350                           ; 1 bytes @ 0x0
   351                           
   352                           
   353                           ; 1 bytes @ 0x0
   354  0070                     	ds	4
   355  0074                     ??_setup:
   356  0074                     ??___awdiv:	
   357                           ; 1 bytes @ 0x4
   358                           
   359  0074                     ??___awmod:	
   360                           ; 1 bytes @ 0x4
   361                           
   362                           
   363                           ; 1 bytes @ 0x4
   364  0074                     	ds	1
   365  0075                     ??_main:
   366                           
   367                           ; 1 bytes @ 0x5
   368  0075                     	ds	1
   369                           
   370                           	psect	cstackBANK0
   371  0020                     __pcstackBANK0:
   372  0020                     ?___awdiv:
   373  0020                     ?___awmod:	
   374                           ; 2 bytes @ 0x0
   375                           
   376  0020                     ___awdiv@divisor:	
   377                           ; 2 bytes @ 0x0
   378                           
   379  0020                     ___awmod@divisor:	
   380                           ; 2 bytes @ 0x0
   381                           
   382                           
   383                           ; 2 bytes @ 0x0
   384  0020                     	ds	2
   385  0022                     ___awdiv@dividend:
   386  0022                     ___awmod@dividend:	
   387                           ; 2 bytes @ 0x2
   388                           
   389                           
   390                           ; 2 bytes @ 0x2
   391  0022                     	ds	2
   392  0024                     ___awdiv@counter:
   393  0024                     ___awmod@counter:	
   394                           ; 1 bytes @ 0x4
   395                           
   396                           
   397                           ; 1 bytes @ 0x4
   398  0024                     	ds	1
   399  0025                     ___awdiv@sign:
   400  0025                     ___awmod@sign:	
   401                           ; 1 bytes @ 0x5
   402                           
   403                           
   404                           ; 1 bytes @ 0x5
   405  0025                     	ds	1
   406  0026                     ___awdiv@quotient:
   407                           
   408                           ; 2 bytes @ 0x6
   409  0026                     	ds	2
   410  0028                     ??_division:
   411                           
   412                           ; 1 bytes @ 0x8
   413  0028                     	ds	3
   414                           
   415                           	psect	maintext
   416  01D3                     __pmaintext:	
   417 ;;
   418 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   419 ;;
   420 ;; *************** function _main *****************
   421 ;; Defined at:
   422 ;;		line 100 in file "Lab_08.c"
   423 ;; Parameters:    Size  Location     Type
   424 ;;		None
   425 ;; Auto vars:     Size  Location     Type
   426 ;;		None
   427 ;; Return value:  Size  Location     Type
   428 ;;                  1    wreg      void 
   429 ;; Registers used:
   430 ;;		wreg, status,2, status,0, pclath, cstack
   431 ;; Tracked objects:
   432 ;;		On entry : B00/0
   433 ;;		On exit  : 0/0
   434 ;;		Unchanged: 0/0
   435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   436 ;;      Params:         0       0       0       0       0
   437 ;;      Locals:         0       0       0       0       0
   438 ;;      Temps:          1       0       0       0       0
   439 ;;      Totals:         1       0       0       0       0
   440 ;;Total ram usage:        1 bytes
   441 ;; Hardware stack levels required when called:    3
   442 ;; This function calls:
   443 ;;		_division
   444 ;;		_setup
   445 ;; This function is called by:
   446 ;;		Startup code after reset
   447 ;; This function uses a non-reentrant model
   448 ;;
   449                           
   450                           
   451                           ;psect for function _main
   452  01D3                     _main:
   453  01D3                     l1116:	
   454                           ;incstack = 0
   455                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   456                           
   457                           
   458                           ;Lab_08.c: 102:     setup();
   459  01D3  120A  118A  21A0  120A  118A  	fcall	_setup
   460  01D8                     l1118:
   461                           
   462                           ;Lab_08.c: 103:     ADCON0bits.GO = 1;
   463  01D8  1283               	bcf	3,5	;RP0=0, select bank0
   464  01D9  1303               	bcf	3,6	;RP1=0, select bank0
   465  01DA  149F               	bsf	31,1	;volatile
   466  01DB                     l1120:
   467                           
   468                           ;Lab_08.c: 106:     {;Lab_08.c: 107:         if(ADCON0bits.GO == 0){
   469  01DB  1283               	bcf	3,5	;RP0=0, select bank0
   470  01DC  1303               	bcf	3,6	;RP1=0, select bank0
   471  01DD  189F               	btfsc	31,1	;volatile
   472  01DE  29E0               	goto	u721
   473  01DF  29E1               	goto	u720
   474  01E0                     u721:
   475  01E0  29F8               	goto	l1132
   476  01E1                     u720:
   477  01E1                     l1122:
   478                           
   479                           ;Lab_08.c: 108:             if(ADCON0bits.CHS == 1)
   480  01E1  0C1F               	rrf	31,w	;volatile
   481  01E2  00F5               	movwf	??_main
   482  01E3  0C75               	rrf	??_main,w
   483  01E4  390F               	andlw	15
   484  01E5  3A01               	xorlw	1
   485  01E6  1D03               	skipz
   486  01E7  29E9               	goto	u731
   487  01E8  29EA               	goto	u730
   488  01E9                     u731:
   489  01E9  29ED               	goto	l1126
   490  01EA                     u730:
   491  01EA                     l1124:
   492                           
   493                           ;Lab_08.c: 109:                 ADCON0bits.CHS = 0;
   494  01EA  30C3               	movlw	-61
   495  01EB  059F               	andwf	31,f	;volatile
   496  01EC  29F1               	goto	l1128
   497  01ED                     l1126:
   498                           
   499                           ;Lab_08.c: 111:                 ADCON0bits.CHS = 1;
   500  01ED  081F               	movf	31,w	;volatile
   501  01EE  39C3               	andlw	-61
   502  01EF  3804               	iorlw	4
   503  01F0  009F               	movwf	31	;volatile
   504  01F1                     l1128:
   505                           
   506                           ;Lab_08.c: 113:             _delay((unsigned long)((100)*(4000000/4000000.0)));
   507  01F1  3021               	movlw	33
   508  01F2  00F5               	movwf	??_main
   509  01F3                     u747:
   510  01F3  0BF5               	decfsz	??_main,f
   511  01F4  29F3               	goto	u747
   512  01F5                     l1130:
   513                           
   514                           ;Lab_08.c: 114:             ADCON0bits.GO = 1;
   515  01F5  1283               	bcf	3,5	;RP0=0, select bank0
   516  01F6  1303               	bcf	3,6	;RP1=0, select bank0
   517  01F7  149F               	bsf	31,1	;volatile
   518  01F8                     l1132:
   519                           
   520                           ;Lab_08.c: 116:        division();
   521  01F8  120A  118A  2094  120A  118A  	fcall	_division
   522  01FD  29DB               	goto	l1120
   523  01FE  120A  118A  280E   	ljmp	start
   524  0201                     __end_of_main:
   525                           
   526                           	psect	text1
   527  01A0                     __ptext1:	
   528 ;; *************** function _setup *****************
   529 ;; Defined at:
   530 ;;		line 120 in file "Lab_08.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;		None
   533 ;; Auto vars:     Size  Location     Type
   534 ;;		None
   535 ;; Return value:  Size  Location     Type
   536 ;;                  1    wreg      void 
   537 ;; Registers used:
   538 ;;		wreg, status,2, status,0
   539 ;; Tracked objects:
   540 ;;		On entry : 0/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   544 ;;      Params:         0       0       0       0       0
   545 ;;      Locals:         0       0       0       0       0
   546 ;;      Temps:          0       0       0       0       0
   547 ;;      Totals:         0       0       0       0       0
   548 ;;Total ram usage:        0 bytes
   549 ;; Hardware stack levels used:    1
   550 ;; Hardware stack levels required when called:    1
   551 ;; This function calls:
   552 ;;		Nothing
   553 ;; This function is called by:
   554 ;;		_main
   555 ;; This function uses a non-reentrant model
   556 ;;
   557                           
   558                           
   559                           ;psect for function _setup
   560  01A0                     _setup:
   561  01A0                     l766:	
   562                           ;incstack = 0
   563                           ; Regs used in _setup: [wreg+status,2+status,0]
   564                           
   565                           
   566                           ;Lab_08.c: 123:     ANSEL = 0b00000011;
   567  01A0  3003               	movlw	3
   568  01A1  1683               	bsf	3,5	;RP0=1, select bank3
   569  01A2  1703               	bsf	3,6	;RP1=1, select bank3
   570  01A3  0088               	movwf	8	;volatile
   571                           
   572                           ;Lab_08.c: 124:     ANSELH = 0b11111111;
   573  01A4  30FF               	movlw	255
   574  01A5  0089               	movwf	9	;volatile
   575  01A6                     l768:
   576                           
   577                           ;Lab_08.c: 127:     TRISAbits.TRISA0 = 1;
   578  01A6  1683               	bsf	3,5	;RP0=1, select bank1
   579  01A7  1303               	bcf	3,6	;RP1=0, select bank1
   580  01A8  1405               	bsf	5,0	;volatile
   581  01A9                     l770:
   582                           
   583                           ;Lab_08.c: 128:     TRISAbits.TRISA1 = 1;
   584  01A9  1485               	bsf	5,1	;volatile
   585  01AA                     l772:
   586                           
   587                           ;Lab_08.c: 129:     TRISBbits.TRISB0 = 0;
   588  01AA  1006               	bcf	6,0	;volatile
   589  01AB                     l774:
   590                           
   591                           ;Lab_08.c: 130:     TRISBbits.TRISB1 = 0;
   592  01AB  1086               	bcf	6,1	;volatile
   593  01AC                     l776:
   594                           
   595                           ;Lab_08.c: 131:     TRISBbits.TRISB2 = 0;
   596  01AC  1106               	bcf	6,2	;volatile
   597  01AD                     l778:
   598                           
   599                           ;Lab_08.c: 132:     TRISC = 0x00;
   600  01AD  0187               	clrf	7	;volatile
   601  01AE                     l780:
   602                           
   603                           ;Lab_08.c: 133:     TRISD = 0x00;
   604  01AE  0188               	clrf	8	;volatile
   605  01AF                     l782:
   606                           
   607                           ;Lab_08.c: 136:     PORTA = 0x00;
   608  01AF  1283               	bcf	3,5	;RP0=0, select bank0
   609  01B0  1303               	bcf	3,6	;RP1=0, select bank0
   610  01B1  0185               	clrf	5	;volatile
   611  01B2                     l784:
   612                           
   613                           ;Lab_08.c: 137:     PORTB = 0x00;
   614  01B2  0186               	clrf	6	;volatile
   615  01B3                     l786:
   616                           
   617                           ;Lab_08.c: 138:     PORTC = 0x00;
   618  01B3  0187               	clrf	7	;volatile
   619  01B4                     l788:
   620                           
   621                           ;Lab_08.c: 139:     PORTD = 0x00;
   622  01B4  0188               	clrf	8	;volatile
   623  01B5                     l790:
   624                           
   625                           ;Lab_08.c: 142:     OSCCONbits.IRCF2 = 0;
   626  01B5  1683               	bsf	3,5	;RP0=1, select bank1
   627  01B6  1303               	bcf	3,6	;RP1=0, select bank1
   628  01B7  130F               	bcf	15,6	;volatile
   629  01B8                     l792:
   630                           
   631                           ;Lab_08.c: 143:     OSCCONbits.IRCF1 = 1;
   632  01B8  168F               	bsf	15,5	;volatile
   633  01B9                     l794:
   634                           
   635                           ;Lab_08.c: 144:     OSCCONbits.IRCF0 = 0;
   636  01B9  120F               	bcf	15,4	;volatile
   637  01BA                     l796:
   638                           
   639                           ;Lab_08.c: 145:     OSCCONbits.SCS = 1;
   640  01BA  140F               	bsf	15,0	;volatile
   641  01BB                     l798:
   642                           
   643                           ;Lab_08.c: 148:     OPTION_REGbits.T0CS = 0;
   644  01BB  1281               	bcf	1,5	;volatile
   645  01BC                     l800:
   646                           
   647                           ;Lab_08.c: 149:     OPTION_REGbits.PSA = 0;
   648  01BC  1181               	bcf	1,3	;volatile
   649  01BD                     l802:
   650                           
   651                           ;Lab_08.c: 150:     OPTION_REGbits.PS2 = 1;
   652  01BD  1501               	bsf	1,2	;volatile
   653  01BE                     l804:
   654                           
   655                           ;Lab_08.c: 151:     OPTION_REGbits.PS1 = 1;
   656  01BE  1481               	bsf	1,1	;volatile
   657  01BF                     l806:
   658                           
   659                           ;Lab_08.c: 152:     OPTION_REGbits.PS0 = 1;
   660  01BF  1401               	bsf	1,0	;volatile
   661  01C0                     l808:
   662                           
   663                           ;Lab_08.c: 155:     INTCONbits.GIE = 1;
   664  01C0  178B               	bsf	11,7	;volatile
   665  01C1                     l810:
   666                           
   667                           ;Lab_08.c: 156:     INTCONbits.T0IE = 1;
   668  01C1  168B               	bsf	11,5	;volatile
   669  01C2                     l812:
   670                           
   671                           ;Lab_08.c: 157:     INTCONbits.T0IF = 0;
   672  01C2  110B               	bcf	11,2	;volatile
   673  01C3                     l814:
   674                           
   675                           ;Lab_08.c: 158:     INTCONbits.PEIE = 1;
   676  01C3  170B               	bsf	11,6	;volatile
   677  01C4                     l816:
   678                           
   679                           ;Lab_08.c: 159:     PIE1bits.ADIE = 1;
   680  01C4  170C               	bsf	12,6	;volatile
   681  01C5                     l818:
   682                           
   683                           ;Lab_08.c: 160:     PIR1bits.ADIF = 0;
   684  01C5  1283               	bcf	3,5	;RP0=0, select bank0
   685  01C6  1303               	bcf	3,6	;RP1=0, select bank0
   686  01C7  130C               	bcf	12,6	;volatile
   687  01C8                     l820:
   688                           
   689                           ;Lab_08.c: 163:     ADCON0bits.ADCS0 = 1;
   690  01C8  171F               	bsf	31,6	;volatile
   691  01C9                     l822:
   692                           
   693                           ;Lab_08.c: 164:     ADCON0bits.ADCS1 = 1;
   694  01C9  179F               	bsf	31,7	;volatile
   695  01CA                     l824:
   696                           
   697                           ;Lab_08.c: 165:     ADCON0bits.ADON = 1;
   698  01CA  141F               	bsf	31,0	;volatile
   699  01CB                     l826:
   700                           
   701                           ;Lab_08.c: 166:     ADCON0bits.CHS = 0;
   702  01CB  30C3               	movlw	-61
   703  01CC  059F               	andwf	31,f	;volatile
   704  01CD                     l828:
   705                           
   706                           ;Lab_08.c: 168:     ADCON1bits.ADFM = 0;
   707  01CD  1683               	bsf	3,5	;RP0=1, select bank1
   708  01CE  1303               	bcf	3,6	;RP1=0, select bank1
   709  01CF  139F               	bcf	31,7	;volatile
   710  01D0                     l830:
   711                           
   712                           ;Lab_08.c: 169:     ADCON1bits.VCFG0 = 0;
   713  01D0  121F               	bcf	31,4	;volatile
   714  01D1                     l832:
   715                           
   716                           ;Lab_08.c: 170:     ADCON1bits.VCFG1 = 0;
   717  01D1  129F               	bcf	31,5	;volatile
   718  01D2                     l89:
   719  01D2  0008               	return
   720  01D3                     __end_of_setup:
   721                           
   722                           	psect	text2
   723  0094                     __ptext2:	
   724 ;; *************** function _division *****************
   725 ;; Defined at:
   726 ;;		line 173 in file "Lab_08.c"
   727 ;; Parameters:    Size  Location     Type
   728 ;;		None
   729 ;; Auto vars:     Size  Location     Type
   730 ;;		None
   731 ;; Return value:  Size  Location     Type
   732 ;;                  1    wreg      unsigned char 
   733 ;; Registers used:
   734 ;;		wreg, status,2, status,0, pclath, cstack
   735 ;; Tracked objects:
   736 ;;		On entry : 0/0
   737 ;;		On exit  : 0/0
   738 ;;		Unchanged: 0/0
   739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   740 ;;      Params:         0       0       0       0       0
   741 ;;      Locals:         0       0       0       0       0
   742 ;;      Temps:          0       3       0       0       0
   743 ;;      Totals:         0       3       0       0       0
   744 ;;Total ram usage:        3 bytes
   745 ;; Hardware stack levels used:    1
   746 ;; Hardware stack levels required when called:    2
   747 ;; This function calls:
   748 ;;		___awdiv
   749 ;;		___awmod
   750 ;; This function is called by:
   751 ;;		_main
   752 ;; This function uses a non-reentrant model
   753 ;;
   754                           
   755                           
   756                           ;psect for function _division
   757  0094                     _division:
   758  0094                     l1114:	
   759                           ;incstack = 0
   760                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
   761                           
   762                           
   763                           ;Lab_08.c: 174:     centenas = contador/100;
   764  0094  3064               	movlw	100
   765  0095  1283               	bcf	3,5	;RP0=0, select bank0
   766  0096  1303               	bcf	3,6	;RP1=0, select bank0
   767  0097  00A0               	movwf	___awdiv@divisor
   768  0098  3000               	movlw	0
   769  0099  00A1               	movwf	___awdiv@divisor+1
   770  009A  0876               	movf	_contador,w
   771  009B  00A8               	movwf	??_division
   772  009C  01A9               	clrf	??_division+1
   773  009D  0828               	movf	??_division,w
   774  009E  00A2               	movwf	___awdiv@dividend
   775  009F  0829               	movf	??_division+1,w
   776  00A0  00A3               	movwf	___awdiv@dividend+1
   777  00A1  120A  118A  202B  120A  118A  	fcall	___awdiv
   778  00A6  1283               	bcf	3,5	;RP0=0, select bank0
   779  00A7  1303               	bcf	3,6	;RP1=0, select bank0
   780  00A8  0820               	movf	?___awdiv,w
   781  00A9  00AA               	movwf	??_division+2
   782  00AA  082A               	movf	??_division+2,w
   783  00AB  00F9               	movwf	_centenas
   784                           
   785                           ;Lab_08.c: 175:     res = contador%100;
   786  00AC  3064               	movlw	100
   787  00AD  00A0               	movwf	___awmod@divisor
   788  00AE  3000               	movlw	0
   789  00AF  00A1               	movwf	___awmod@divisor+1
   790  00B0  0876               	movf	_contador,w
   791  00B1  00A8               	movwf	??_division
   792  00B2  01A9               	clrf	??_division+1
   793  00B3  0828               	movf	??_division,w
   794  00B4  00A2               	movwf	___awmod@dividend
   795  00B5  0829               	movf	??_division+1,w
   796  00B6  00A3               	movwf	___awmod@dividend+1
   797  00B7  120A  118A  20EF  120A  118A  	fcall	___awmod
   798  00BC  1283               	bcf	3,5	;RP0=0, select bank0
   799  00BD  1303               	bcf	3,6	;RP1=0, select bank0
   800  00BE  0820               	movf	?___awmod,w
   801  00BF  00AA               	movwf	??_division+2
   802  00C0  082A               	movf	??_division+2,w
   803  00C1  00F7               	movwf	_res
   804                           
   805                           ;Lab_08.c: 176:     decenas = res/10;
   806  00C2  300A               	movlw	10
   807  00C3  00A0               	movwf	___awdiv@divisor
   808  00C4  3000               	movlw	0
   809  00C5  00A1               	movwf	___awdiv@divisor+1
   810  00C6  0877               	movf	_res,w
   811  00C7  00A8               	movwf	??_division
   812  00C8  01A9               	clrf	??_division+1
   813  00C9  0828               	movf	??_division,w
   814  00CA  00A2               	movwf	___awdiv@dividend
   815  00CB  0829               	movf	??_division+1,w
   816  00CC  00A3               	movwf	___awdiv@dividend+1
   817  00CD  120A  118A  202B  120A  118A  	fcall	___awdiv
   818  00D2  1283               	bcf	3,5	;RP0=0, select bank0
   819  00D3  1303               	bcf	3,6	;RP1=0, select bank0
   820  00D4  0820               	movf	?___awdiv,w
   821  00D5  00AA               	movwf	??_division+2
   822  00D6  082A               	movf	??_division+2,w
   823  00D7  00F8               	movwf	_decenas
   824                           
   825                           ;Lab_08.c: 177:     unidades = res%10;
   826  00D8  300A               	movlw	10
   827  00D9  00A0               	movwf	___awmod@divisor
   828  00DA  3000               	movlw	0
   829  00DB  00A1               	movwf	___awmod@divisor+1
   830  00DC  0877               	movf	_res,w
   831  00DD  00A8               	movwf	??_division
   832  00DE  01A9               	clrf	??_division+1
   833  00DF  0828               	movf	??_division,w
   834  00E0  00A2               	movwf	___awmod@dividend
   835  00E1  0829               	movf	??_division+1,w
   836  00E2  00A3               	movwf	___awmod@dividend+1
   837  00E3  120A  118A  20EF  120A  118A  	fcall	___awmod
   838  00E8  1283               	bcf	3,5	;RP0=0, select bank0
   839  00E9  1303               	bcf	3,6	;RP1=0, select bank0
   840  00EA  0820               	movf	?___awmod,w
   841  00EB  00AA               	movwf	??_division+2
   842  00EC  082A               	movf	??_division+2,w
   843  00ED  00B8               	movwf	_unidades
   844  00EE                     l92:
   845  00EE  0008               	return
   846  00EF                     __end_of_division:
   847                           
   848                           	psect	text3
   849  00EF                     __ptext3:	
   850 ;; *************** function ___awmod *****************
   851 ;; Defined at:
   852 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
   853 ;; Parameters:    Size  Location     Type
   854 ;;  divisor         2    0[BANK0 ] int 
   855 ;;  dividend        2    2[BANK0 ] int 
   856 ;; Auto vars:     Size  Location     Type
   857 ;;  sign            1    5[BANK0 ] unsigned char 
   858 ;;  counter         1    4[BANK0 ] unsigned char 
   859 ;; Return value:  Size  Location     Type
   860 ;;                  2    0[BANK0 ] int 
   861 ;; Registers used:
   862 ;;		wreg, status,2, status,0
   863 ;; Tracked objects:
   864 ;;		On entry : 0/0
   865 ;;		On exit  : 0/0
   866 ;;		Unchanged: 0/0
   867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   868 ;;      Params:         0       4       0       0       0
   869 ;;      Locals:         0       2       0       0       0
   870 ;;      Temps:          1       0       0       0       0
   871 ;;      Totals:         1       6       0       0       0
   872 ;;Total ram usage:        7 bytes
   873 ;; Hardware stack levels used:    1
   874 ;; Hardware stack levels required when called:    1
   875 ;; This function calls:
   876 ;;		Nothing
   877 ;; This function is called by:
   878 ;;		_division
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           
   882                           
   883                           ;psect for function ___awmod
   884  00EF                     ___awmod:
   885  00EF                     l1076:	
   886                           ;incstack = 0
   887                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   888                           
   889  00EF  1283               	bcf	3,5	;RP0=0, select bank0
   890  00F0  1303               	bcf	3,6	;RP1=0, select bank0
   891  00F1  01A5               	clrf	___awmod@sign
   892  00F2                     l1078:
   893  00F2  1FA3               	btfss	___awmod@dividend+1,7
   894  00F3  28F5               	goto	u631
   895  00F4  28F6               	goto	u630
   896  00F5                     u631:
   897  00F5  28FD               	goto	l1084
   898  00F6                     u630:
   899  00F6                     l1080:
   900  00F6  09A2               	comf	___awmod@dividend,f
   901  00F7  09A3               	comf	___awmod@dividend+1,f
   902  00F8  0AA2               	incf	___awmod@dividend,f
   903  00F9  1903               	skipnz
   904  00FA  0AA3               	incf	___awmod@dividend+1,f
   905  00FB                     l1082:
   906  00FB  01A5               	clrf	___awmod@sign
   907  00FC  0AA5               	incf	___awmod@sign,f
   908  00FD                     l1084:
   909  00FD  1FA1               	btfss	___awmod@divisor+1,7
   910  00FE  2900               	goto	u641
   911  00FF  2901               	goto	u640
   912  0100                     u641:
   913  0100  2906               	goto	l1088
   914  0101                     u640:
   915  0101                     l1086:
   916  0101  09A0               	comf	___awmod@divisor,f
   917  0102  09A1               	comf	___awmod@divisor+1,f
   918  0103  0AA0               	incf	___awmod@divisor,f
   919  0104  1903               	skipnz
   920  0105  0AA1               	incf	___awmod@divisor+1,f
   921  0106                     l1088:
   922  0106  0820               	movf	___awmod@divisor,w
   923  0107  0421               	iorwf	___awmod@divisor+1,w
   924  0108  1903               	btfsc	3,2
   925  0109  290B               	goto	u651
   926  010A  290C               	goto	u650
   927  010B                     u651:
   928  010B  293B               	goto	l1106
   929  010C                     u650:
   930  010C                     l1090:
   931  010C  01A4               	clrf	___awmod@counter
   932  010D  0AA4               	incf	___awmod@counter,f
   933  010E  291A               	goto	l1096
   934  010F                     l1092:
   935  010F  3001               	movlw	1
   936  0110                     u665:
   937  0110  1003               	clrc
   938  0111  0DA0               	rlf	___awmod@divisor,f
   939  0112  0DA1               	rlf	___awmod@divisor+1,f
   940  0113  3EFF               	addlw	-1
   941  0114  1D03               	skipz
   942  0115  2910               	goto	u665
   943  0116                     l1094:
   944  0116  3001               	movlw	1
   945  0117  00F4               	movwf	??___awmod
   946  0118  0874               	movf	??___awmod,w
   947  0119  07A4               	addwf	___awmod@counter,f
   948  011A                     l1096:
   949  011A  1FA1               	btfss	___awmod@divisor+1,7
   950  011B  291D               	goto	u671
   951  011C  291E               	goto	u670
   952  011D                     u671:
   953  011D  290F               	goto	l1092
   954  011E                     u670:
   955  011E                     l1098:
   956  011E  0821               	movf	___awmod@divisor+1,w
   957  011F  0223               	subwf	___awmod@dividend+1,w
   958  0120  1D03               	skipz
   959  0121  2924               	goto	u685
   960  0122  0820               	movf	___awmod@divisor,w
   961  0123  0222               	subwf	___awmod@dividend,w
   962  0124                     u685:
   963  0124  1C03               	skipc
   964  0125  2927               	goto	u681
   965  0126  2928               	goto	u680
   966  0127                     u681:
   967  0127  292E               	goto	l1102
   968  0128                     u680:
   969  0128                     l1100:
   970  0128  0820               	movf	___awmod@divisor,w
   971  0129  02A2               	subwf	___awmod@dividend,f
   972  012A  0821               	movf	___awmod@divisor+1,w
   973  012B  1C03               	skipc
   974  012C  03A3               	decf	___awmod@dividend+1,f
   975  012D  02A3               	subwf	___awmod@dividend+1,f
   976  012E                     l1102:
   977  012E  3001               	movlw	1
   978  012F                     u695:
   979  012F  1003               	clrc
   980  0130  0CA1               	rrf	___awmod@divisor+1,f
   981  0131  0CA0               	rrf	___awmod@divisor,f
   982  0132  3EFF               	addlw	-1
   983  0133  1D03               	skipz
   984  0134  292F               	goto	u695
   985  0135                     l1104:
   986  0135  3001               	movlw	1
   987  0136  02A4               	subwf	___awmod@counter,f
   988  0137  1D03               	btfss	3,2
   989  0138  293A               	goto	u701
   990  0139  293B               	goto	u700
   991  013A                     u701:
   992  013A  291E               	goto	l1098
   993  013B                     u700:
   994  013B                     l1106:
   995  013B  0825               	movf	___awmod@sign,w
   996  013C  1903               	btfsc	3,2
   997  013D  293F               	goto	u711
   998  013E  2940               	goto	u710
   999  013F                     u711:
  1000  013F  2945               	goto	l1110
  1001  0140                     u710:
  1002  0140                     l1108:
  1003  0140  09A2               	comf	___awmod@dividend,f
  1004  0141  09A3               	comf	___awmod@dividend+1,f
  1005  0142  0AA2               	incf	___awmod@dividend,f
  1006  0143  1903               	skipnz
  1007  0144  0AA3               	incf	___awmod@dividend+1,f
  1008  0145                     l1110:
  1009  0145  0823               	movf	___awmod@dividend+1,w
  1010  0146  00A1               	movwf	?___awmod+1
  1011  0147  0822               	movf	___awmod@dividend,w
  1012  0148  00A0               	movwf	?___awmod
  1013  0149                     l344:
  1014  0149  0008               	return
  1015  014A                     __end_of___awmod:
  1016                           
  1017                           	psect	text4
  1018  002B                     __ptext4:	
  1019 ;; *************** function ___awdiv *****************
  1020 ;; Defined at:
  1021 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;  divisor         2    0[BANK0 ] int 
  1024 ;;  dividend        2    2[BANK0 ] int 
  1025 ;; Auto vars:     Size  Location     Type
  1026 ;;  quotient        2    6[BANK0 ] int 
  1027 ;;  sign            1    5[BANK0 ] unsigned char 
  1028 ;;  counter         1    4[BANK0 ] unsigned char 
  1029 ;; Return value:  Size  Location     Type
  1030 ;;                  2    0[BANK0 ] int 
  1031 ;; Registers used:
  1032 ;;		wreg, status,2, status,0
  1033 ;; Tracked objects:
  1034 ;;		On entry : 0/0
  1035 ;;		On exit  : 0/0
  1036 ;;		Unchanged: 0/0
  1037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1038 ;;      Params:         0       4       0       0       0
  1039 ;;      Locals:         0       4       0       0       0
  1040 ;;      Temps:          1       0       0       0       0
  1041 ;;      Totals:         1       8       0       0       0
  1042 ;;Total ram usage:        9 bytes
  1043 ;; Hardware stack levels used:    1
  1044 ;; Hardware stack levels required when called:    1
  1045 ;; This function calls:
  1046 ;;		Nothing
  1047 ;; This function is called by:
  1048 ;;		_division
  1049 ;; This function uses a non-reentrant model
  1050 ;;
  1051                           
  1052                           
  1053                           ;psect for function ___awdiv
  1054  002B                     ___awdiv:
  1055  002B                     l1032:	
  1056                           ;incstack = 0
  1057                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1058                           
  1059  002B  1283               	bcf	3,5	;RP0=0, select bank0
  1060  002C  1303               	bcf	3,6	;RP1=0, select bank0
  1061  002D  01A5               	clrf	___awdiv@sign
  1062  002E                     l1034:
  1063  002E  1FA1               	btfss	___awdiv@divisor+1,7
  1064  002F  2831               	goto	u531
  1065  0030  2832               	goto	u530
  1066  0031                     u531:
  1067  0031  2839               	goto	l1040
  1068  0032                     u530:
  1069  0032                     l1036:
  1070  0032  09A0               	comf	___awdiv@divisor,f
  1071  0033  09A1               	comf	___awdiv@divisor+1,f
  1072  0034  0AA0               	incf	___awdiv@divisor,f
  1073  0035  1903               	skipnz
  1074  0036  0AA1               	incf	___awdiv@divisor+1,f
  1075  0037                     l1038:
  1076  0037  01A5               	clrf	___awdiv@sign
  1077  0038  0AA5               	incf	___awdiv@sign,f
  1078  0039                     l1040:
  1079  0039  1FA3               	btfss	___awdiv@dividend+1,7
  1080  003A  283C               	goto	u541
  1081  003B  283D               	goto	u540
  1082  003C                     u541:
  1083  003C  2846               	goto	l1046
  1084  003D                     u540:
  1085  003D                     l1042:
  1086  003D  09A2               	comf	___awdiv@dividend,f
  1087  003E  09A3               	comf	___awdiv@dividend+1,f
  1088  003F  0AA2               	incf	___awdiv@dividend,f
  1089  0040  1903               	skipnz
  1090  0041  0AA3               	incf	___awdiv@dividend+1,f
  1091  0042                     l1044:
  1092  0042  3001               	movlw	1
  1093  0043  00F4               	movwf	??___awdiv
  1094  0044  0874               	movf	??___awdiv,w
  1095  0045  06A5               	xorwf	___awdiv@sign,f
  1096  0046                     l1046:
  1097  0046  01A6               	clrf	___awdiv@quotient
  1098  0047  01A7               	clrf	___awdiv@quotient+1
  1099  0048                     l1048:
  1100  0048  0820               	movf	___awdiv@divisor,w
  1101  0049  0421               	iorwf	___awdiv@divisor+1,w
  1102  004A  1903               	btfsc	3,2
  1103  004B  284D               	goto	u551
  1104  004C  284E               	goto	u550
  1105  004D                     u551:
  1106  004D  2885               	goto	l1068
  1107  004E                     u550:
  1108  004E                     l1050:
  1109  004E  01A4               	clrf	___awdiv@counter
  1110  004F  0AA4               	incf	___awdiv@counter,f
  1111  0050  285C               	goto	l1056
  1112  0051                     l1052:
  1113  0051  3001               	movlw	1
  1114  0052                     u565:
  1115  0052  1003               	clrc
  1116  0053  0DA0               	rlf	___awdiv@divisor,f
  1117  0054  0DA1               	rlf	___awdiv@divisor+1,f
  1118  0055  3EFF               	addlw	-1
  1119  0056  1D03               	skipz
  1120  0057  2852               	goto	u565
  1121  0058                     l1054:
  1122  0058  3001               	movlw	1
  1123  0059  00F4               	movwf	??___awdiv
  1124  005A  0874               	movf	??___awdiv,w
  1125  005B  07A4               	addwf	___awdiv@counter,f
  1126  005C                     l1056:
  1127  005C  1FA1               	btfss	___awdiv@divisor+1,7
  1128  005D  285F               	goto	u571
  1129  005E  2860               	goto	u570
  1130  005F                     u571:
  1131  005F  2851               	goto	l1052
  1132  0060                     u570:
  1133  0060                     l1058:
  1134  0060  3001               	movlw	1
  1135  0061                     u585:
  1136  0061  1003               	clrc
  1137  0062  0DA6               	rlf	___awdiv@quotient,f
  1138  0063  0DA7               	rlf	___awdiv@quotient+1,f
  1139  0064  3EFF               	addlw	-1
  1140  0065  1D03               	skipz
  1141  0066  2861               	goto	u585
  1142  0067  0821               	movf	___awdiv@divisor+1,w
  1143  0068  0223               	subwf	___awdiv@dividend+1,w
  1144  0069  1D03               	skipz
  1145  006A  286D               	goto	u595
  1146  006B  0820               	movf	___awdiv@divisor,w
  1147  006C  0222               	subwf	___awdiv@dividend,w
  1148  006D                     u595:
  1149  006D  1C03               	skipc
  1150  006E  2870               	goto	u591
  1151  006F  2871               	goto	u590
  1152  0070                     u591:
  1153  0070  2878               	goto	l1064
  1154  0071                     u590:
  1155  0071                     l1060:
  1156  0071  0820               	movf	___awdiv@divisor,w
  1157  0072  02A2               	subwf	___awdiv@dividend,f
  1158  0073  0821               	movf	___awdiv@divisor+1,w
  1159  0074  1C03               	skipc
  1160  0075  03A3               	decf	___awdiv@dividend+1,f
  1161  0076  02A3               	subwf	___awdiv@dividend+1,f
  1162  0077                     l1062:
  1163  0077  1426               	bsf	___awdiv@quotient,0
  1164  0078                     l1064:
  1165  0078  3001               	movlw	1
  1166  0079                     u605:
  1167  0079  1003               	clrc
  1168  007A  0CA1               	rrf	___awdiv@divisor+1,f
  1169  007B  0CA0               	rrf	___awdiv@divisor,f
  1170  007C  3EFF               	addlw	-1
  1171  007D  1D03               	skipz
  1172  007E  2879               	goto	u605
  1173  007F                     l1066:
  1174  007F  3001               	movlw	1
  1175  0080  02A4               	subwf	___awdiv@counter,f
  1176  0081  1D03               	btfss	3,2
  1177  0082  2884               	goto	u611
  1178  0083  2885               	goto	u610
  1179  0084                     u611:
  1180  0084  2860               	goto	l1058
  1181  0085                     u610:
  1182  0085                     l1068:
  1183  0085  0825               	movf	___awdiv@sign,w
  1184  0086  1903               	btfsc	3,2
  1185  0087  2889               	goto	u621
  1186  0088  288A               	goto	u620
  1187  0089                     u621:
  1188  0089  288F               	goto	l1072
  1189  008A                     u620:
  1190  008A                     l1070:
  1191  008A  09A6               	comf	___awdiv@quotient,f
  1192  008B  09A7               	comf	___awdiv@quotient+1,f
  1193  008C  0AA6               	incf	___awdiv@quotient,f
  1194  008D  1903               	skipnz
  1195  008E  0AA7               	incf	___awdiv@quotient+1,f
  1196  008F                     l1072:
  1197  008F  0827               	movf	___awdiv@quotient+1,w
  1198  0090  00A1               	movwf	?___awdiv+1
  1199  0091  0826               	movf	___awdiv@quotient,w
  1200  0092  00A0               	movwf	?___awdiv
  1201  0093                     l331:
  1202  0093  0008               	return
  1203  0094                     __end_of___awdiv:
  1204                           
  1205                           	psect	text5
  1206  014A                     __ptext5:	
  1207 ;; *************** function _isr *****************
  1208 ;; Defined at:
  1209 ;;		line 57 in file "Lab_08.c"
  1210 ;; Parameters:    Size  Location     Type
  1211 ;;		None
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;		None
  1214 ;; Return value:  Size  Location     Type
  1215 ;;                  1    wreg      void 
  1216 ;; Registers used:
  1217 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1223 ;;      Params:         0       0       0       0       0
  1224 ;;      Locals:         0       0       0       0       0
  1225 ;;      Temps:          4       0       0       0       0
  1226 ;;      Totals:         4       0       0       0       0
  1227 ;;Total ram usage:        4 bytes
  1228 ;; Hardware stack levels used:    1
  1229 ;; This function calls:
  1230 ;;		Nothing
  1231 ;; This function is called by:
  1232 ;;		Interrupt level 1
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235                           
  1236                           
  1237                           ;psect for function _isr
  1238  014A                     _isr:
  1239  014A                     i1l976:
  1240                           
  1241                           ;Lab_08.c: 60:     if(T0IF == 1)
  1242  014A  1D0B               	btfss	11,2	;volatile
  1243  014B  294D               	goto	u46_21
  1244  014C  294E               	goto	u46_20
  1245  014D                     u46_21:
  1246  014D  2980               	goto	i1l1004
  1247  014E                     u46_20:
  1248  014E                     i1l978:
  1249                           
  1250                           ;Lab_08.c: 61:     {;Lab_08.c: 62:         PORTBbits.RB2 = 0;
  1251  014E  1283               	bcf	3,5	;RP0=0, select bank0
  1252  014F  1303               	bcf	3,6	;RP1=0, select bank0
  1253  0150  1106               	bcf	6,2	;volatile
  1254                           
  1255                           ;Lab_08.c: 63:         PORTBbits.RB0 = 1;
  1256  0151  1406               	bsf	6,0	;volatile
  1257  0152                     i1l980:
  1258                           
  1259                           ;Lab_08.c: 64:         PORTD = (tabla[centenas]);
  1260  0152  0879               	movf	_centenas,w
  1261  0153  3E2B               	addlw	(low (_tabla| 0))& (0+255)
  1262  0154  0084               	movwf	4
  1263  0155  1383               	bcf	3,7	;select IRP bank0
  1264  0156  0800               	movf	0,w
  1265  0157  0088               	movwf	8	;volatile
  1266  0158                     i1l982:
  1267                           
  1268                           ;Lab_08.c: 65:         multi = 0b00000001;
  1269  0158  3001               	movlw	1
  1270  0159  00B5               	movwf	_multi
  1271  015A  3000               	movlw	0
  1272  015B  00B6               	movwf	_multi+1
  1273  015C                     i1l984:
  1274                           
  1275                           ;Lab_08.c: 67:         if (multi == 0b00000001)
  1276  015C  0335               	decf	_multi,w
  1277  015D  0436               	iorwf	_multi+1,w
  1278  015E  1D03               	btfss	3,2
  1279  015F  2961               	goto	u47_21
  1280  0160  2962               	goto	u47_20
  1281  0161                     u47_21:
  1282  0161  296D               	goto	i1l992
  1283  0162                     u47_20:
  1284  0162                     i1l986:
  1285                           
  1286                           ;Lab_08.c: 68:         {;Lab_08.c: 69:             PORTBbits.RB0 = 0;
  1287  0162  1006               	bcf	6,0	;volatile
  1288                           
  1289                           ;Lab_08.c: 70:             PORTBbits.RB1 = 1;
  1290  0163  1486               	bsf	6,1	;volatile
  1291  0164                     i1l988:
  1292                           
  1293                           ;Lab_08.c: 71:             PORTD = (tabla[decenas]);
  1294  0164  0878               	movf	_decenas,w
  1295  0165  3E2B               	addlw	(low (_tabla| 0))& (0+255)
  1296  0166  0084               	movwf	4
  1297  0167  0800               	movf	0,w
  1298  0168  0088               	movwf	8	;volatile
  1299  0169                     i1l990:
  1300                           
  1301                           ;Lab_08.c: 72:             multi = 0b00000010;
  1302  0169  3002               	movlw	2
  1303  016A  00B5               	movwf	_multi
  1304  016B  3000               	movlw	0
  1305  016C  00B6               	movwf	_multi+1
  1306  016D                     i1l992:
  1307                           
  1308                           ;Lab_08.c: 74:         if (multi == 0b00000010)
  1309  016D  3002               	movlw	2
  1310  016E  0635               	xorwf	_multi,w
  1311  016F  0436               	iorwf	_multi+1,w
  1312  0170  1D03               	btfss	3,2
  1313  0171  2973               	goto	u48_21
  1314  0172  2974               	goto	u48_20
  1315  0173                     u48_21:
  1316  0173  297D               	goto	i1l1000
  1317  0174                     u48_20:
  1318  0174                     i1l994:
  1319                           
  1320                           ;Lab_08.c: 75:         {;Lab_08.c: 76:             PORTBbits.RB1 = 0;
  1321  0174  1086               	bcf	6,1	;volatile
  1322                           
  1323                           ;Lab_08.c: 77:             PORTBbits.RB2 = 1;
  1324  0175  1506               	bsf	6,2	;volatile
  1325  0176                     i1l996:
  1326                           
  1327                           ;Lab_08.c: 78:             PORTD = (tabla[unidades]);
  1328  0176  0838               	movf	_unidades,w
  1329  0177  3E2B               	addlw	(low (_tabla| 0))& (0+255)
  1330  0178  0084               	movwf	4
  1331  0179  0800               	movf	0,w
  1332  017A  0088               	movwf	8	;volatile
  1333  017B                     i1l998:
  1334                           
  1335                           ;Lab_08.c: 79:             multi = 0b00000000;
  1336  017B  01B5               	clrf	_multi
  1337  017C  01B6               	clrf	_multi+1
  1338  017D                     i1l1000:
  1339                           
  1340                           ;Lab_08.c: 81:         INTCONbits.T0IF = 0;
  1341  017D  110B               	bcf	11,2	;volatile
  1342  017E                     i1l1002:
  1343                           
  1344                           ;Lab_08.c: 82:         TMR0 = 255;
  1345  017E  30FF               	movlw	255
  1346  017F  0081               	movwf	1	;volatile
  1347  0180                     i1l1004:
  1348                           
  1349                           ;Lab_08.c: 85:        if(PIR1bits.ADIF == 1)
  1350  0180  1283               	bcf	3,5	;RP0=0, select bank0
  1351  0181  1303               	bcf	3,6	;RP1=0, select bank0
  1352  0182  1F0C               	btfss	12,6	;volatile
  1353  0183  2985               	goto	u49_21
  1354  0184  2986               	goto	u49_20
  1355  0185                     u49_21:
  1356  0185  2997               	goto	i1l75
  1357  0186                     u49_20:
  1358  0186                     i1l1006:
  1359                           
  1360                           ;Lab_08.c: 86:        {;Lab_08.c: 87:            if(ADCON0bits.CHS == 0)
  1361  0186  0C1F               	rrf	31,w	;volatile
  1362  0187  00F0               	movwf	??_isr
  1363  0188  0C70               	rrf	??_isr,w
  1364  0189  390F               	andlw	15
  1365  018A  3A00               	xorlw	0
  1366  018B  1D03               	skipz
  1367  018C  298E               	goto	u50_21
  1368  018D  298F               	goto	u50_20
  1369  018E                     u50_21:
  1370  018E  2992               	goto	i1l1010
  1371  018F                     u50_20:
  1372  018F                     i1l1008:
  1373                           
  1374                           ;Lab_08.c: 88:                PORTC = ADRESH;
  1375  018F  081E               	movf	30,w	;volatile
  1376  0190  0087               	movwf	7	;volatile
  1377  0191  2996               	goto	i1l1012
  1378  0192                     i1l1010:
  1379                           
  1380                           ;Lab_08.c: 91:                contador = ADRESH;
  1381  0192  081E               	movf	30,w	;volatile
  1382  0193  00F0               	movwf	??_isr
  1383  0194  0870               	movf	??_isr,w
  1384  0195  00F6               	movwf	_contador
  1385  0196                     i1l1012:
  1386                           
  1387                           ;Lab_08.c: 93:            PIR1bits.ADIF = 0;
  1388  0196  130C               	bcf	12,6	;volatile
  1389  0197                     i1l75:
  1390  0197  0873               	movf	??_isr+3,w
  1391  0198  008A               	movwf	10
  1392  0199  0872               	movf	??_isr+2,w
  1393  019A  0084               	movwf	4
  1394  019B  0E71               	swapf	??_isr+1,w
  1395  019C  0083               	movwf	3
  1396  019D  0EFE               	swapf	btemp,f
  1397  019E  0E7E               	swapf	btemp,w
  1398  019F  0009               	retfie
  1399  01A0                     __end_of_isr:
  1400  007E                     btemp	set	126	;btemp
  1401  007E                     wtemp0	set	126
  1402                           
  1403                           	psect	intentry
  1404  0004                     __pintentry:	
  1405                           ;incstack = 0
  1406                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1407                           
  1408  0004                     interrupt_function:
  1409  007E                     saved_w	set	btemp
  1410  0004  00FE               	movwf	btemp
  1411  0005  0E03               	swapf	3,w
  1412  0006  00F1               	movwf	??_isr+1
  1413  0007  0804               	movf	4,w
  1414  0008  00F2               	movwf	??_isr+2
  1415  0009  080A               	movf	10,w
  1416  000A  00F3               	movwf	??_isr+3
  1417  000B  120A  118A  294A   	ljmp	_isr
  1418                           
  1419                           	psect	config
  1420                           
  1421                           ;Config register CONFIG1 @ 0x2007
  1422                           ;	Oscillator Selection bits
  1423                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1424                           ;	Watchdog Timer Enable bit
  1425                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1426                           ;	Power-up Timer Enable bit
  1427                           ;	PWRTE = OFF, PWRT disabled
  1428                           ;	RE3/MCLR pin function select bit
  1429                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1430                           ;	Code Protection bit
  1431                           ;	CP = OFF, Program memory code protection is disabled
  1432                           ;	Data Code Protection bit
  1433                           ;	CPD = OFF, Data memory code protection is disabled
  1434                           ;	Brown Out Reset Selection bits
  1435                           ;	BOREN = OFF, BOR disabled
  1436                           ;	Internal External Switchover bit
  1437                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1438                           ;	Fail-Safe Clock Monitor Enabled bit
  1439                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1440                           ;	Low Voltage Programming Enable bit
  1441                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1442                           ;	In-Circuit Debugger Mode bit
  1443                           ;	DEBUG = 0x1, unprogrammed default
  1444  2007                     	org	8199
  1445  2007  20D4               	dw	8404
  1446                           
  1447                           ;Config register CONFIG2 @ 0x2008
  1448                           ;	Brown-out Reset Selection bit
  1449                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1450                           ;	Flash Program Memory Self Write Enable bits
  1451                           ;	WRT = OFF, Write protection off
  1452  2008                     	org	8200
  1453  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     11      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _division->___awdiv
    _division->___awmod

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_division
    _division->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1598
                                              5 COMMON     1     1      0
                           _division
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _division                                             3     3      0    1598
                                              8 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     793
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _division
     ___awdiv
     ___awmod
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      19       5       31.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      23      12        0.0%
ABS                  0      0      23       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Apr 20 12:28:44 2021

                      pc 0002                       l92 00EE                       l89 01D2  
           ___awdiv@sign 0025                       fsr 0004                      l331 0093  
                    l344 0149                      l800 01BC                      l810 01C1  
                    l802 01BD                      l820 01C8                      l812 01C2  
                    l804 01BE                      l830 01D0                      l822 01C9  
                    l814 01C3                      l806 01BF                      l832 01D1  
                    l824 01CA                      l816 01C4                      l808 01C0  
                    l826 01CB                      l818 01C5                      l770 01A9  
                    l828 01CD                      l780 01AE                      l772 01AA  
                    l790 01B5                      l782 01AF                      l774 01AB  
                    l766 01A0                      l792 01B8                      l784 01B2  
                    l776 01AC                      l768 01A6                      l794 01B9  
                    l786 01B3                      l778 01AD                      l796 01BA  
                    l788 01B4                      l798 01BB                      u610 0085  
                    u530 0032                      u611 0084                      u531 0031  
                    u620 008A                      u540 003D                      u700 013B  
                    u621 0089                      u605 0079                      u541 003C  
                    u701 013A                      u550 004E                      u710 0140  
                    u630 00F6                      u551 004D                      u711 013F  
                    u631 00F5                      u640 0101                      u720 01E1  
                    u641 0100                      u721 01E0                      u570 0060  
                    u650 010C                      u730 01EA                      u571 005F  
                    u651 010B                      u731 01E9                      u565 0052  
                    u590 0071                      u670 011E                      u591 0070  
                    u671 011D                      u680 0128                      u585 0061  
                    u681 0127                      u665 0110                      u595 006D  
                    u747 01F3                      u685 0124                      u695 012F  
                    _isr 014A                      _res 0077                      fsr0 0004  
                    indf 0000             ___awmod@sign 0025                     l1100 0128  
                   l1110 0145                     l1102 012E                     l1040 0039  
                   l1032 002B                     l1104 0135                     l1120 01DB  
                   l1050 004E                     l1042 003D                     l1034 002E  
                   l1106 013B                     l1114 0094                     l1130 01F5  
                   l1122 01E1                     l1060 0071                     l1052 0051  
                   l1044 0042                     l1036 0032                     l1108 0140  
                   l1124 01EA                     l1132 01F8                     l1116 01D3  
                   l1070 008A                     l1062 0077                     l1054 0058  
                   l1046 0046                     l1038 0037                     l1126 01ED  
                   l1118 01D8                     l1072 008F                     l1064 0078  
                   l1056 005C                     l1048 0048                     l1080 00F6  
                   l1128 01F1                     l1066 007F                     l1058 0060  
                   l1090 010C                     l1082 00FB                     l1068 0085  
                   l1092 010F                     l1084 00FD                     l1076 00EF  
                   l1094 0116                     l1086 0101                     l1078 00F2  
                   l1096 011A                     l1088 0106                     l1098 011E  
                   ?_isr 0070                     _T0IF 005A                     i1l75 0197  
                   _TMR0 0001                     _main 01D3                     _pot2 0037  
                   btemp 007E                     start 000E                    ??_isr 0070  
                  ?_main 0070          __end_of___awdiv 0094          __end_of___awmod 014A  
                  _ANSEL 0188          ___awdiv@divisor 0020                    i1l980 0152  
                  i1l990 0169                    i1l982 0158                    i1l992 016D  
                  i1l984 015C                    i1l976 014A                    i1l994 0174  
                  i1l986 0162                    i1l978 014E                    i1l996 0176  
                  i1l988 0164                    i1l998 017B          ___awdiv@counter 0024  
                  u50_20 018F                    u50_21 018E                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  u46_20 014E                    u46_21 014D                    u47_20 0162  
                  u47_21 0161                    u48_20 0174                    u48_21 0173  
                  u49_20 0186                    u49_21 0185                    _TRISC 0087  
                  _TRISD 0088                    _tabla 002B                    _multi 0035  
                  _setup 01A0                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_main 0201  
                 ??_main 0075                   _ADRESH 001E         ___awdiv@dividend 0022  
                 ?_setup 0070                   _ANSELH 0189                   i1l1000 017D  
                 i1l1010 0192                   i1l1002 017E                   i1l1012 0196  
                 i1l1004 0180                   i1l1006 0186                   i1l1008 018F  
       __end_of_division 00EF                ??___awdiv 0074                ??___awmod 0074  
       ___awdiv@quotient 0026          ___awmod@divisor 0020          ___awmod@counter 0024  
                 saved_w 007E  __end_of__initialization 0027           __pcstackCOMMON 0070  
           __pidataBANK0 0214            __end_of_setup 01D3           _OPTION_REGbits 0081  
                ??_setup 0074               __pbssBANK0 0035               __pmaintext 01D3  
             __pintentry 0004                ?_division 0070                  ___awdiv 002B  
                ___awmod 00EF                  _decenas 0078                  __ptext1 01A0  
                __ptext2 0094                  __ptext3 00EF                  __ptext4 002B  
                __ptext5 014A             __size_of_isr 0056         ___awmod@dividend 0022  
   end_of_initialization 0027               ??_division 0028                _PORTBbits 0006  
              _TRISAbits 0085                _TRISBbits 0086      start_initialization 0011  
            __end_of_isr 01A0               init_fetch0 0201              __pdataBANK0 002B  
            __pbssCOMMON 0076                ___latbits 0002            __pcstackBANK0 0020  
      __size_of_division 005B                 ?___awdiv 0020                 ?___awmod 0020  
         __size_of_setup 0033        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
       __size_of___awdiv 0069         __size_of___awmod 005B                 _centenas 0079  
               _division 0094                 _contador 0076            __size_of_main 002E  
               _unidades 0038               _INTCONbits 000B                 init_ram0 0205  
               intlevel1 0000               _OSCCONbits 008F  
