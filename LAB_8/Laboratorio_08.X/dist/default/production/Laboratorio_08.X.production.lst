

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Apr 20 01:49:36 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213                           
   214                           	psect	idataBANK0
   215  0201                     __pidataBANK0:
   216                           
   217                           ;initializer for _tabla
   218  0201  343F               	retlw	63
   219  0202  3406               	retlw	6
   220  0203  345B               	retlw	91
   221  0204  344F               	retlw	79
   222  0205  3466               	retlw	102
   223  0206  346D               	retlw	109
   224  0207  347D               	retlw	125
   225  0208  3407               	retlw	7
   226  0209  347F               	retlw	127
   227  020A  346F               	retlw	111
   228                           
   229                           	psect	nvCOMMON
   230  0079                     __pnvCOMMON:
   231  0079                     _res:
   232  0079                     	ds	1
   233                           
   234                           	psect	nvBANK0
   235  0035                     __pnvBANK0:
   236  0035                     _unidades:
   237  0035                     	ds	1
   238  0036                     _decenas:
   239  0036                     	ds	1
   240  0037                     _centenas:
   241  0037                     	ds	1
   242  0006                     _PORTB	set	6
   243  0005                     _PORTA	set	5
   244  001E                     _ADRESH	set	30
   245  0007                     _PORTC	set	7
   246  001F                     _ADCON0bits	set	31
   247  000C                     _PIR1bits	set	12
   248  0001                     _TMR0	set	1
   249  000B                     _INTCONbits	set	11
   250  0008                     _PORTD	set	8
   251  0006                     _PORTBbits	set	6
   252  005A                     _T0IF	set	90
   253  009F                     _ADCON1bits	set	159
   254  008C                     _PIE1bits	set	140
   255  0081                     _OPTION_REGbits	set	129
   256  008F                     _OSCCONbits	set	143
   257  0088                     _TRISD	set	136
   258  0087                     _TRISC	set	135
   259  0086                     _TRISBbits	set	134
   260  0085                     _TRISAbits	set	133
   261  0189                     _ANSELH	set	393
   262  0188                     _ANSEL	set	392
   263                           
   264                           	psect	cinit
   265  0011                     start_initialization:	
   266                           ; #config settings
   267                           
   268  0011                     __initialization:
   269                           
   270                           ; Initialize objects allocated to BANK0
   271  0011  1383               	bcf	3,7	;select IRP bank0
   272  0012  3035               	movlw	low (__pdataBANK0+10)
   273  0013  00FD               	movwf	btemp+-1
   274  0014  3002               	movlw	high __pidataBANK0
   275  0015  00FE               	movwf	btemp
   276  0016  3001               	movlw	low __pidataBANK0
   277  0017  00FF               	movwf	btemp+1
   278  0018  302B               	movlw	low __pdataBANK0
   279  0019  0084               	movwf	4
   280  001A  120A  118A  21E1  120A  118A  	fcall	init_ram0
   281                           
   282                           ; Clear objects allocated to COMMON
   283  001F  01F5               	clrf	__pbssCOMMON& (0+127)
   284  0020  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   285  0021  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   286  0022  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   287  0023                     end_of_initialization:	
   288                           ;End of C runtime variable initialization code
   289                           
   290  0023                     __end_of__initialization:
   291  0023  0183               	clrf	3
   292  0024  120A  118A  29F0   	ljmp	_main	;jump to C main() function
   293                           
   294                           	psect	bssCOMMON
   295  0075                     __pbssCOMMON:
   296  0075                     _multi:
   297  0075                     	ds	2
   298  0077                     _pot2:
   299  0077                     	ds	1
   300  0078                     _contador:
   301  0078                     	ds	1
   302                           
   303                           	psect	dataBANK0
   304  002B                     __pdataBANK0:
   305  002B                     _tabla:
   306  002B                     	ds	10
   307                           
   308                           	psect	inittext
   309  01DD                     init_fetch0:	
   310                           ;	Called with low address in FSR and high address in W
   311                           
   312  01DD  087E               	movf	btemp,w
   313  01DE  008A               	movwf	10
   314  01DF  087F               	movf	btemp+1,w
   315  01E0  0082               	movwf	2
   316  01E1                     init_ram0:	
   317                           ;Called with:
   318                           ;	high address of idata address in btemp 
   319                           ;	low address of idata address in btemp+1 
   320                           ;	low address of data in FSR
   321                           ;	high address + 1 of data in btemp-1
   322                           
   323  01E1  120A  118A  21DD  120A  118A  	fcall	init_fetch0
   324  01E6  0080               	movwf	0
   325  01E7  0A84               	incf	4,f
   326  01E8  0804               	movf	4,w
   327  01E9  067D               	xorwf	btemp+-1,w
   328  01EA  1903               	btfsc	3,2
   329  01EB  3400               	retlw	0
   330  01EC  0AFF               	incf	btemp+1,f
   331  01ED  1903               	btfsc	3,2
   332  01EE  0AFE               	incf	btemp,f
   333  01EF  29E1               	goto	init_ram0
   334                           
   335                           	psect	cstackCOMMON
   336  0070                     __pcstackCOMMON:
   337  0070                     ?_setup:
   338  0070                     ?_division:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_isr:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ??_isr:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ?_main:	
   348                           ; 1 bytes @ 0x0
   349                           
   350                           
   351                           ; 1 bytes @ 0x0
   352  0070                     	ds	4
   353  0074                     ??_setup:
   354  0074                     ??___awdiv:	
   355                           ; 1 bytes @ 0x4
   356                           
   357  0074                     ??___awmod:	
   358                           ; 1 bytes @ 0x4
   359                           
   360                           
   361                           ; 1 bytes @ 0x4
   362  0074                     	ds	1
   363  0075                     ??_main:
   364                           
   365                           	psect	cstackBANK0
   366  0020                     __pcstackBANK0:	
   367                           ; 1 bytes @ 0x5
   368                           
   369  0020                     ?___awdiv:
   370  0020                     ?___awmod:	
   371                           ; 2 bytes @ 0x0
   372                           
   373  0020                     ___awdiv@divisor:	
   374                           ; 2 bytes @ 0x0
   375                           
   376  0020                     ___awmod@divisor:	
   377                           ; 2 bytes @ 0x0
   378                           
   379                           
   380                           ; 2 bytes @ 0x0
   381  0020                     	ds	2
   382  0022                     ___awdiv@dividend:
   383  0022                     ___awmod@dividend:	
   384                           ; 2 bytes @ 0x2
   385                           
   386                           
   387                           ; 2 bytes @ 0x2
   388  0022                     	ds	2
   389  0024                     ___awdiv@counter:
   390  0024                     ___awmod@counter:	
   391                           ; 1 bytes @ 0x4
   392                           
   393                           
   394                           ; 1 bytes @ 0x4
   395  0024                     	ds	1
   396  0025                     ___awdiv@sign:
   397  0025                     ___awmod@sign:	
   398                           ; 1 bytes @ 0x5
   399                           
   400                           
   401                           ; 1 bytes @ 0x5
   402  0025                     	ds	1
   403  0026                     ___awdiv@quotient:
   404                           
   405                           ; 2 bytes @ 0x6
   406  0026                     	ds	2
   407  0028                     ??_division:
   408                           
   409                           ; 1 bytes @ 0x8
   410  0028                     	ds	3
   411                           
   412                           	psect	maintext
   413  01F0                     __pmaintext:	
   414 ;;
   415 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   416 ;;
   417 ;; *************** function _main *****************
   418 ;; Defined at:
   419 ;;		line 103 in file "Lab_08.c"
   420 ;; Parameters:    Size  Location     Type
   421 ;;		None
   422 ;; Auto vars:     Size  Location     Type
   423 ;;		None
   424 ;; Return value:  Size  Location     Type
   425 ;;                  1    wreg      void 
   426 ;; Registers used:
   427 ;;		wreg, status,2, status,0, pclath, cstack
   428 ;; Tracked objects:
   429 ;;		On entry : B00/0
   430 ;;		On exit  : 0/0
   431 ;;		Unchanged: 0/0
   432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   433 ;;      Params:         0       0       0       0       0
   434 ;;      Locals:         0       0       0       0       0
   435 ;;      Temps:          0       0       0       0       0
   436 ;;      Totals:         0       0       0       0       0
   437 ;;Total ram usage:        0 bytes
   438 ;; Hardware stack levels required when called:    3
   439 ;; This function calls:
   440 ;;		_division
   441 ;;		_setup
   442 ;; This function is called by:
   443 ;;		Startup code after reset
   444 ;; This function uses a non-reentrant model
   445 ;;
   446                           
   447                           
   448                           ;psect for function _main
   449  01F0                     _main:
   450  01F0                     l1093:	
   451                           ;incstack = 0
   452                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   453                           
   454                           
   455                           ;Lab_08.c: 105:     setup();
   456  01F0  120A  118A  21AA  120A  118A  	fcall	_setup
   457  01F5                     l1095:
   458                           
   459                           ;Lab_08.c: 106:     ADCON0bits.GO = 1;
   460  01F5  1283               	bcf	3,5	;RP0=0, select bank0
   461  01F6  1303               	bcf	3,6	;RP1=0, select bank0
   462  01F7  149F               	bsf	31,1	;volatile
   463  01F8                     l80:	
   464                           ;Lab_08.c: 108:     while(1)
   465                           
   466                           
   467                           ;Lab_08.c: 109:     {;Lab_08.c: 110:        division();
   468  01F8  120A  118A  20F4  120A  118A  	fcall	_division
   469  01FD  29F8               	goto	l80
   470  01FE  120A  118A  280E   	ljmp	start
   471  0201                     __end_of_main:
   472                           
   473                           	psect	text1
   474  01AA                     __ptext1:	
   475 ;; *************** function _setup *****************
   476 ;; Defined at:
   477 ;;		line 114 in file "Lab_08.c"
   478 ;; Parameters:    Size  Location     Type
   479 ;;		None
   480 ;; Auto vars:     Size  Location     Type
   481 ;;		None
   482 ;; Return value:  Size  Location     Type
   483 ;;                  1    wreg      void 
   484 ;; Registers used:
   485 ;;		wreg, status,2, status,0
   486 ;; Tracked objects:
   487 ;;		On entry : 0/0
   488 ;;		On exit  : 0/0
   489 ;;		Unchanged: 0/0
   490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   491 ;;      Params:         0       0       0       0       0
   492 ;;      Locals:         0       0       0       0       0
   493 ;;      Temps:          0       0       0       0       0
   494 ;;      Totals:         0       0       0       0       0
   495 ;;Total ram usage:        0 bytes
   496 ;; Hardware stack levels used:    1
   497 ;; Hardware stack levels required when called:    1
   498 ;; This function calls:
   499 ;;		Nothing
   500 ;; This function is called by:
   501 ;;		_main
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505                           
   506                           ;psect for function _setup
   507  01AA                     _setup:
   508  01AA                     l763:	
   509                           ;incstack = 0
   510                           ; Regs used in _setup: [wreg+status,2+status,0]
   511                           
   512                           
   513                           ;Lab_08.c: 117:     ANSEL = 0b00000011;
   514  01AA  3003               	movlw	3
   515  01AB  1683               	bsf	3,5	;RP0=1, select bank3
   516  01AC  1703               	bsf	3,6	;RP1=1, select bank3
   517  01AD  0088               	movwf	8	;volatile
   518                           
   519                           ;Lab_08.c: 118:     ANSELH = 0b11111111;
   520  01AE  30FF               	movlw	255
   521  01AF  0089               	movwf	9	;volatile
   522  01B0                     l765:
   523                           
   524                           ;Lab_08.c: 121:     TRISAbits.TRISA0 = 1;
   525  01B0  1683               	bsf	3,5	;RP0=1, select bank1
   526  01B1  1303               	bcf	3,6	;RP1=0, select bank1
   527  01B2  1405               	bsf	5,0	;volatile
   528  01B3                     l767:
   529                           
   530                           ;Lab_08.c: 122:     TRISAbits.TRISA1 = 1;
   531  01B3  1485               	bsf	5,1	;volatile
   532  01B4                     l769:
   533                           
   534                           ;Lab_08.c: 123:     TRISBbits.TRISB0 = 0;
   535  01B4  1006               	bcf	6,0	;volatile
   536  01B5                     l771:
   537                           
   538                           ;Lab_08.c: 124:     TRISBbits.TRISB1 = 0;
   539  01B5  1086               	bcf	6,1	;volatile
   540  01B6                     l773:
   541                           
   542                           ;Lab_08.c: 125:     TRISBbits.TRISB2 = 0;
   543  01B6  1106               	bcf	6,2	;volatile
   544  01B7                     l775:
   545                           
   546                           ;Lab_08.c: 126:     TRISC = 0x00;
   547  01B7  0187               	clrf	7	;volatile
   548  01B8                     l777:
   549                           
   550                           ;Lab_08.c: 127:     TRISD = 0x00;
   551  01B8  0188               	clrf	8	;volatile
   552  01B9                     l779:
   553                           
   554                           ;Lab_08.c: 130:     PORTA = 0x00;
   555  01B9  1283               	bcf	3,5	;RP0=0, select bank0
   556  01BA  1303               	bcf	3,6	;RP1=0, select bank0
   557  01BB  0185               	clrf	5	;volatile
   558  01BC                     l781:
   559                           
   560                           ;Lab_08.c: 131:     PORTB = 0x00;
   561  01BC  0186               	clrf	6	;volatile
   562  01BD                     l783:
   563                           
   564                           ;Lab_08.c: 132:     PORTC = 0x00;
   565  01BD  0187               	clrf	7	;volatile
   566  01BE                     l785:
   567                           
   568                           ;Lab_08.c: 133:     PORTD = 0x00;
   569  01BE  0188               	clrf	8	;volatile
   570  01BF                     l787:
   571                           
   572                           ;Lab_08.c: 136:     OSCCONbits.IRCF2 = 0;
   573  01BF  1683               	bsf	3,5	;RP0=1, select bank1
   574  01C0  1303               	bcf	3,6	;RP1=0, select bank1
   575  01C1  130F               	bcf	15,6	;volatile
   576  01C2                     l789:
   577                           
   578                           ;Lab_08.c: 137:     OSCCONbits.IRCF1 = 1;
   579  01C2  168F               	bsf	15,5	;volatile
   580  01C3                     l791:
   581                           
   582                           ;Lab_08.c: 138:     OSCCONbits.IRCF0 = 0;
   583  01C3  120F               	bcf	15,4	;volatile
   584  01C4                     l793:
   585                           
   586                           ;Lab_08.c: 139:     OSCCONbits.SCS = 1;
   587  01C4  140F               	bsf	15,0	;volatile
   588  01C5                     l795:
   589                           
   590                           ;Lab_08.c: 142:     OPTION_REGbits.T0CS = 0;
   591  01C5  1281               	bcf	1,5	;volatile
   592  01C6                     l797:
   593                           
   594                           ;Lab_08.c: 143:     OPTION_REGbits.PSA = 0;
   595  01C6  1181               	bcf	1,3	;volatile
   596  01C7                     l799:
   597                           
   598                           ;Lab_08.c: 144:     OPTION_REGbits.PS2 = 1;
   599  01C7  1501               	bsf	1,2	;volatile
   600  01C8                     l801:
   601                           
   602                           ;Lab_08.c: 145:     OPTION_REGbits.PS1 = 1;
   603  01C8  1481               	bsf	1,1	;volatile
   604  01C9                     l803:
   605                           
   606                           ;Lab_08.c: 146:     OPTION_REGbits.PS0 = 1;
   607  01C9  1401               	bsf	1,0	;volatile
   608  01CA                     l805:
   609                           
   610                           ;Lab_08.c: 149:     INTCONbits.GIE = 1;
   611  01CA  178B               	bsf	11,7	;volatile
   612  01CB                     l807:
   613                           
   614                           ;Lab_08.c: 150:     INTCONbits.T0IE = 1;
   615  01CB  168B               	bsf	11,5	;volatile
   616  01CC                     l809:
   617                           
   618                           ;Lab_08.c: 151:     INTCONbits.T0IF = 0;
   619  01CC  110B               	bcf	11,2	;volatile
   620  01CD                     l811:
   621                           
   622                           ;Lab_08.c: 152:     INTCONbits.PEIE = 1;
   623  01CD  170B               	bsf	11,6	;volatile
   624  01CE                     l813:
   625                           
   626                           ;Lab_08.c: 153:     PIE1bits.ADIE = 1;
   627  01CE  170C               	bsf	12,6	;volatile
   628  01CF                     l815:
   629                           
   630                           ;Lab_08.c: 154:     PIR1bits.ADIF = 0;
   631  01CF  1283               	bcf	3,5	;RP0=0, select bank0
   632  01D0  1303               	bcf	3,6	;RP1=0, select bank0
   633  01D1  130C               	bcf	12,6	;volatile
   634  01D2                     l817:
   635                           
   636                           ;Lab_08.c: 157:     ADCON0bits.ADCS0 = 1;
   637  01D2  171F               	bsf	31,6	;volatile
   638  01D3                     l819:
   639                           
   640                           ;Lab_08.c: 158:     ADCON0bits.ADCS1 = 1;
   641  01D3  179F               	bsf	31,7	;volatile
   642  01D4                     l821:
   643                           
   644                           ;Lab_08.c: 159:     ADCON0bits.ADON = 1;
   645  01D4  141F               	bsf	31,0	;volatile
   646  01D5                     l823:
   647                           
   648                           ;Lab_08.c: 161:     ADCON0bits.CHS = 0;
   649  01D5  30C3               	movlw	-61
   650  01D6  059F               	andwf	31,f	;volatile
   651  01D7                     l825:
   652                           
   653                           ;Lab_08.c: 163:     ADCON1bits.ADFM = 0;
   654  01D7  1683               	bsf	3,5	;RP0=1, select bank1
   655  01D8  1303               	bcf	3,6	;RP1=0, select bank1
   656  01D9  139F               	bcf	31,7	;volatile
   657  01DA                     l827:
   658                           
   659                           ;Lab_08.c: 164:     ADCON1bits.VCFG0 = 0;
   660  01DA  121F               	bcf	31,4	;volatile
   661  01DB                     l829:
   662                           
   663                           ;Lab_08.c: 165:     ADCON1bits.VCFG1 = 0;
   664  01DB  129F               	bcf	31,5	;volatile
   665  01DC                     l86:
   666  01DC  0008               	return
   667  01DD                     __end_of_setup:
   668                           
   669                           	psect	text2
   670  00F4                     __ptext2:	
   671 ;; *************** function _division *****************
   672 ;; Defined at:
   673 ;;		line 168 in file "Lab_08.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;		None
   676 ;; Auto vars:     Size  Location     Type
   677 ;;		None
   678 ;; Return value:  Size  Location     Type
   679 ;;                  1    wreg      unsigned char 
   680 ;; Registers used:
   681 ;;		wreg, status,2, status,0, pclath, cstack
   682 ;; Tracked objects:
   683 ;;		On entry : 0/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   687 ;;      Params:         0       0       0       0       0
   688 ;;      Locals:         0       0       0       0       0
   689 ;;      Temps:          0       3       0       0       0
   690 ;;      Totals:         0       3       0       0       0
   691 ;;Total ram usage:        3 bytes
   692 ;; Hardware stack levels used:    1
   693 ;; Hardware stack levels required when called:    2
   694 ;; This function calls:
   695 ;;		___awdiv
   696 ;;		___awmod
   697 ;; This function is called by:
   698 ;;		_main
   699 ;; This function uses a non-reentrant model
   700 ;;
   701                           
   702                           
   703                           ;psect for function _division
   704  00F4                     _division:
   705  00F4                     l1091:	
   706                           ;incstack = 0
   707                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
   708                           
   709                           
   710                           ;Lab_08.c: 170:     centenas = contador/100;
   711  00F4  3064               	movlw	100
   712  00F5  1283               	bcf	3,5	;RP0=0, select bank0
   713  00F6  1303               	bcf	3,6	;RP1=0, select bank0
   714  00F7  00A0               	movwf	___awdiv@divisor
   715  00F8  3000               	movlw	0
   716  00F9  00A1               	movwf	___awdiv@divisor+1
   717  00FA  0878               	movf	_contador,w
   718  00FB  00A8               	movwf	??_division
   719  00FC  01A9               	clrf	??_division+1
   720  00FD  0828               	movf	??_division,w
   721  00FE  00A2               	movwf	___awdiv@dividend
   722  00FF  0829               	movf	??_division+1,w
   723  0100  00A3               	movwf	___awdiv@dividend+1
   724  0101  120A  118A  2027  120A  118A  	fcall	___awdiv
   725  0106  1283               	bcf	3,5	;RP0=0, select bank0
   726  0107  1303               	bcf	3,6	;RP1=0, select bank0
   727  0108  0820               	movf	?___awdiv,w
   728  0109  00AA               	movwf	??_division+2
   729  010A  082A               	movf	??_division+2,w
   730  010B  00B7               	movwf	_centenas
   731                           
   732                           ;Lab_08.c: 171:     res = contador%100;
   733  010C  3064               	movlw	100
   734  010D  00A0               	movwf	___awmod@divisor
   735  010E  3000               	movlw	0
   736  010F  00A1               	movwf	___awmod@divisor+1
   737  0110  0878               	movf	_contador,w
   738  0111  00A8               	movwf	??_division
   739  0112  01A9               	clrf	??_division+1
   740  0113  0828               	movf	??_division,w
   741  0114  00A2               	movwf	___awmod@dividend
   742  0115  0829               	movf	??_division+1,w
   743  0116  00A3               	movwf	___awmod@dividend+1
   744  0117  120A  118A  214F  120A  118A  	fcall	___awmod
   745  011C  1283               	bcf	3,5	;RP0=0, select bank0
   746  011D  1303               	bcf	3,6	;RP1=0, select bank0
   747  011E  0820               	movf	?___awmod,w
   748  011F  00AA               	movwf	??_division+2
   749  0120  082A               	movf	??_division+2,w
   750  0121  00F9               	movwf	_res
   751                           
   752                           ;Lab_08.c: 172:     decenas = res/10;
   753  0122  300A               	movlw	10
   754  0123  00A0               	movwf	___awdiv@divisor
   755  0124  3000               	movlw	0
   756  0125  00A1               	movwf	___awdiv@divisor+1
   757  0126  0879               	movf	_res,w
   758  0127  00A8               	movwf	??_division
   759  0128  01A9               	clrf	??_division+1
   760  0129  0828               	movf	??_division,w
   761  012A  00A2               	movwf	___awdiv@dividend
   762  012B  0829               	movf	??_division+1,w
   763  012C  00A3               	movwf	___awdiv@dividend+1
   764  012D  120A  118A  2027  120A  118A  	fcall	___awdiv
   765  0132  1283               	bcf	3,5	;RP0=0, select bank0
   766  0133  1303               	bcf	3,6	;RP1=0, select bank0
   767  0134  0820               	movf	?___awdiv,w
   768  0135  00AA               	movwf	??_division+2
   769  0136  082A               	movf	??_division+2,w
   770  0137  00B6               	movwf	_decenas
   771                           
   772                           ;Lab_08.c: 173:     unidades = res%10;
   773  0138  300A               	movlw	10
   774  0139  00A0               	movwf	___awmod@divisor
   775  013A  3000               	movlw	0
   776  013B  00A1               	movwf	___awmod@divisor+1
   777  013C  0879               	movf	_res,w
   778  013D  00A8               	movwf	??_division
   779  013E  01A9               	clrf	??_division+1
   780  013F  0828               	movf	??_division,w
   781  0140  00A2               	movwf	___awmod@dividend
   782  0141  0829               	movf	??_division+1,w
   783  0142  00A3               	movwf	___awmod@dividend+1
   784  0143  120A  118A  214F  120A  118A  	fcall	___awmod
   785  0148  1283               	bcf	3,5	;RP0=0, select bank0
   786  0149  1303               	bcf	3,6	;RP1=0, select bank0
   787  014A  0820               	movf	?___awmod,w
   788  014B  00AA               	movwf	??_division+2
   789  014C  082A               	movf	??_division+2,w
   790  014D  00B5               	movwf	_unidades
   791  014E                     l89:
   792  014E  0008               	return
   793  014F                     __end_of_division:
   794                           
   795                           	psect	text3
   796  014F                     __ptext3:	
   797 ;; *************** function ___awmod *****************
   798 ;; Defined at:
   799 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;  divisor         2    0[BANK0 ] int 
   802 ;;  dividend        2    2[BANK0 ] int 
   803 ;; Auto vars:     Size  Location     Type
   804 ;;  sign            1    5[BANK0 ] unsigned char 
   805 ;;  counter         1    4[BANK0 ] unsigned char 
   806 ;; Return value:  Size  Location     Type
   807 ;;                  2    0[BANK0 ] int 
   808 ;; Registers used:
   809 ;;		wreg, status,2, status,0
   810 ;; Tracked objects:
   811 ;;		On entry : 0/0
   812 ;;		On exit  : 0/0
   813 ;;		Unchanged: 0/0
   814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   815 ;;      Params:         0       4       0       0       0
   816 ;;      Locals:         0       2       0       0       0
   817 ;;      Temps:          1       0       0       0       0
   818 ;;      Totals:         1       6       0       0       0
   819 ;;Total ram usage:        7 bytes
   820 ;; Hardware stack levels used:    1
   821 ;; Hardware stack levels required when called:    1
   822 ;; This function calls:
   823 ;;		Nothing
   824 ;; This function is called by:
   825 ;;		_division
   826 ;; This function uses a non-reentrant model
   827 ;;
   828                           
   829                           
   830                           ;psect for function ___awmod
   831  014F                     ___awmod:
   832  014F                     l1053:	
   833                           ;incstack = 0
   834                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   835                           
   836  014F  1283               	bcf	3,5	;RP0=0, select bank0
   837  0150  1303               	bcf	3,6	;RP1=0, select bank0
   838  0151  01A5               	clrf	___awmod@sign
   839  0152                     l1055:
   840  0152  1FA3               	btfss	___awmod@dividend+1,7
   841  0153  2955               	goto	u611
   842  0154  2956               	goto	u610
   843  0155                     u611:
   844  0155  295D               	goto	l1061
   845  0156                     u610:
   846  0156                     l1057:
   847  0156  09A2               	comf	___awmod@dividend,f
   848  0157  09A3               	comf	___awmod@dividend+1,f
   849  0158  0AA2               	incf	___awmod@dividend,f
   850  0159  1903               	skipnz
   851  015A  0AA3               	incf	___awmod@dividend+1,f
   852  015B                     l1059:
   853  015B  01A5               	clrf	___awmod@sign
   854  015C  0AA5               	incf	___awmod@sign,f
   855  015D                     l1061:
   856  015D  1FA1               	btfss	___awmod@divisor+1,7
   857  015E  2960               	goto	u621
   858  015F  2961               	goto	u620
   859  0160                     u621:
   860  0160  2966               	goto	l1065
   861  0161                     u620:
   862  0161                     l1063:
   863  0161  09A0               	comf	___awmod@divisor,f
   864  0162  09A1               	comf	___awmod@divisor+1,f
   865  0163  0AA0               	incf	___awmod@divisor,f
   866  0164  1903               	skipnz
   867  0165  0AA1               	incf	___awmod@divisor+1,f
   868  0166                     l1065:
   869  0166  0820               	movf	___awmod@divisor,w
   870  0167  0421               	iorwf	___awmod@divisor+1,w
   871  0168  1903               	btfsc	3,2
   872  0169  296B               	goto	u631
   873  016A  296C               	goto	u630
   874  016B                     u631:
   875  016B  299B               	goto	l1083
   876  016C                     u630:
   877  016C                     l1067:
   878  016C  01A4               	clrf	___awmod@counter
   879  016D  0AA4               	incf	___awmod@counter,f
   880  016E  297A               	goto	l1073
   881  016F                     l1069:
   882  016F  3001               	movlw	1
   883  0170                     u645:
   884  0170  1003               	clrc
   885  0171  0DA0               	rlf	___awmod@divisor,f
   886  0172  0DA1               	rlf	___awmod@divisor+1,f
   887  0173  3EFF               	addlw	-1
   888  0174  1D03               	skipz
   889  0175  2970               	goto	u645
   890  0176                     l1071:
   891  0176  3001               	movlw	1
   892  0177  00F4               	movwf	??___awmod
   893  0178  0874               	movf	??___awmod,w
   894  0179  07A4               	addwf	___awmod@counter,f
   895  017A                     l1073:
   896  017A  1FA1               	btfss	___awmod@divisor+1,7
   897  017B  297D               	goto	u651
   898  017C  297E               	goto	u650
   899  017D                     u651:
   900  017D  296F               	goto	l1069
   901  017E                     u650:
   902  017E                     l1075:
   903  017E  0821               	movf	___awmod@divisor+1,w
   904  017F  0223               	subwf	___awmod@dividend+1,w
   905  0180  1D03               	skipz
   906  0181  2984               	goto	u665
   907  0182  0820               	movf	___awmod@divisor,w
   908  0183  0222               	subwf	___awmod@dividend,w
   909  0184                     u665:
   910  0184  1C03               	skipc
   911  0185  2987               	goto	u661
   912  0186  2988               	goto	u660
   913  0187                     u661:
   914  0187  298E               	goto	l1079
   915  0188                     u660:
   916  0188                     l1077:
   917  0188  0820               	movf	___awmod@divisor,w
   918  0189  02A2               	subwf	___awmod@dividend,f
   919  018A  0821               	movf	___awmod@divisor+1,w
   920  018B  1C03               	skipc
   921  018C  03A3               	decf	___awmod@dividend+1,f
   922  018D  02A3               	subwf	___awmod@dividend+1,f
   923  018E                     l1079:
   924  018E  3001               	movlw	1
   925  018F                     u675:
   926  018F  1003               	clrc
   927  0190  0CA1               	rrf	___awmod@divisor+1,f
   928  0191  0CA0               	rrf	___awmod@divisor,f
   929  0192  3EFF               	addlw	-1
   930  0193  1D03               	skipz
   931  0194  298F               	goto	u675
   932  0195                     l1081:
   933  0195  3001               	movlw	1
   934  0196  02A4               	subwf	___awmod@counter,f
   935  0197  1D03               	btfss	3,2
   936  0198  299A               	goto	u681
   937  0199  299B               	goto	u680
   938  019A                     u681:
   939  019A  297E               	goto	l1075
   940  019B                     u680:
   941  019B                     l1083:
   942  019B  0825               	movf	___awmod@sign,w
   943  019C  1903               	btfsc	3,2
   944  019D  299F               	goto	u691
   945  019E  29A0               	goto	u690
   946  019F                     u691:
   947  019F  29A5               	goto	l1087
   948  01A0                     u690:
   949  01A0                     l1085:
   950  01A0  09A2               	comf	___awmod@dividend,f
   951  01A1  09A3               	comf	___awmod@dividend+1,f
   952  01A2  0AA2               	incf	___awmod@dividend,f
   953  01A3  1903               	skipnz
   954  01A4  0AA3               	incf	___awmod@dividend+1,f
   955  01A5                     l1087:
   956  01A5  0823               	movf	___awmod@dividend+1,w
   957  01A6  00A1               	movwf	?___awmod+1
   958  01A7  0822               	movf	___awmod@dividend,w
   959  01A8  00A0               	movwf	?___awmod
   960  01A9                     l341:
   961  01A9  0008               	return
   962  01AA                     __end_of___awmod:
   963                           
   964                           	psect	text4
   965  0027                     __ptext4:	
   966 ;; *************** function ___awdiv *****************
   967 ;; Defined at:
   968 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
   969 ;; Parameters:    Size  Location     Type
   970 ;;  divisor         2    0[BANK0 ] int 
   971 ;;  dividend        2    2[BANK0 ] int 
   972 ;; Auto vars:     Size  Location     Type
   973 ;;  quotient        2    6[BANK0 ] int 
   974 ;;  sign            1    5[BANK0 ] unsigned char 
   975 ;;  counter         1    4[BANK0 ] unsigned char 
   976 ;; Return value:  Size  Location     Type
   977 ;;                  2    0[BANK0 ] int 
   978 ;; Registers used:
   979 ;;		wreg, status,2, status,0
   980 ;; Tracked objects:
   981 ;;		On entry : 0/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   985 ;;      Params:         0       4       0       0       0
   986 ;;      Locals:         0       4       0       0       0
   987 ;;      Temps:          1       0       0       0       0
   988 ;;      Totals:         1       8       0       0       0
   989 ;;Total ram usage:        9 bytes
   990 ;; Hardware stack levels used:    1
   991 ;; Hardware stack levels required when called:    1
   992 ;; This function calls:
   993 ;;		Nothing
   994 ;; This function is called by:
   995 ;;		_division
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999                           
  1000                           ;psect for function ___awdiv
  1001  0027                     ___awdiv:
  1002  0027                     l1009:	
  1003                           ;incstack = 0
  1004                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1005                           
  1006  0027  1283               	bcf	3,5	;RP0=0, select bank0
  1007  0028  1303               	bcf	3,6	;RP1=0, select bank0
  1008  0029  01A5               	clrf	___awdiv@sign
  1009  002A                     l1011:
  1010  002A  1FA1               	btfss	___awdiv@divisor+1,7
  1011  002B  282D               	goto	u511
  1012  002C  282E               	goto	u510
  1013  002D                     u511:
  1014  002D  2835               	goto	l1017
  1015  002E                     u510:
  1016  002E                     l1013:
  1017  002E  09A0               	comf	___awdiv@divisor,f
  1018  002F  09A1               	comf	___awdiv@divisor+1,f
  1019  0030  0AA0               	incf	___awdiv@divisor,f
  1020  0031  1903               	skipnz
  1021  0032  0AA1               	incf	___awdiv@divisor+1,f
  1022  0033                     l1015:
  1023  0033  01A5               	clrf	___awdiv@sign
  1024  0034  0AA5               	incf	___awdiv@sign,f
  1025  0035                     l1017:
  1026  0035  1FA3               	btfss	___awdiv@dividend+1,7
  1027  0036  2838               	goto	u521
  1028  0037  2839               	goto	u520
  1029  0038                     u521:
  1030  0038  2842               	goto	l1023
  1031  0039                     u520:
  1032  0039                     l1019:
  1033  0039  09A2               	comf	___awdiv@dividend,f
  1034  003A  09A3               	comf	___awdiv@dividend+1,f
  1035  003B  0AA2               	incf	___awdiv@dividend,f
  1036  003C  1903               	skipnz
  1037  003D  0AA3               	incf	___awdiv@dividend+1,f
  1038  003E                     l1021:
  1039  003E  3001               	movlw	1
  1040  003F  00F4               	movwf	??___awdiv
  1041  0040  0874               	movf	??___awdiv,w
  1042  0041  06A5               	xorwf	___awdiv@sign,f
  1043  0042                     l1023:
  1044  0042  01A6               	clrf	___awdiv@quotient
  1045  0043  01A7               	clrf	___awdiv@quotient+1
  1046  0044                     l1025:
  1047  0044  0820               	movf	___awdiv@divisor,w
  1048  0045  0421               	iorwf	___awdiv@divisor+1,w
  1049  0046  1903               	btfsc	3,2
  1050  0047  2849               	goto	u531
  1051  0048  284A               	goto	u530
  1052  0049                     u531:
  1053  0049  2881               	goto	l1045
  1054  004A                     u530:
  1055  004A                     l1027:
  1056  004A  01A4               	clrf	___awdiv@counter
  1057  004B  0AA4               	incf	___awdiv@counter,f
  1058  004C  2858               	goto	l1033
  1059  004D                     l1029:
  1060  004D  3001               	movlw	1
  1061  004E                     u545:
  1062  004E  1003               	clrc
  1063  004F  0DA0               	rlf	___awdiv@divisor,f
  1064  0050  0DA1               	rlf	___awdiv@divisor+1,f
  1065  0051  3EFF               	addlw	-1
  1066  0052  1D03               	skipz
  1067  0053  284E               	goto	u545
  1068  0054                     l1031:
  1069  0054  3001               	movlw	1
  1070  0055  00F4               	movwf	??___awdiv
  1071  0056  0874               	movf	??___awdiv,w
  1072  0057  07A4               	addwf	___awdiv@counter,f
  1073  0058                     l1033:
  1074  0058  1FA1               	btfss	___awdiv@divisor+1,7
  1075  0059  285B               	goto	u551
  1076  005A  285C               	goto	u550
  1077  005B                     u551:
  1078  005B  284D               	goto	l1029
  1079  005C                     u550:
  1080  005C                     l1035:
  1081  005C  3001               	movlw	1
  1082  005D                     u565:
  1083  005D  1003               	clrc
  1084  005E  0DA6               	rlf	___awdiv@quotient,f
  1085  005F  0DA7               	rlf	___awdiv@quotient+1,f
  1086  0060  3EFF               	addlw	-1
  1087  0061  1D03               	skipz
  1088  0062  285D               	goto	u565
  1089  0063  0821               	movf	___awdiv@divisor+1,w
  1090  0064  0223               	subwf	___awdiv@dividend+1,w
  1091  0065  1D03               	skipz
  1092  0066  2869               	goto	u575
  1093  0067  0820               	movf	___awdiv@divisor,w
  1094  0068  0222               	subwf	___awdiv@dividend,w
  1095  0069                     u575:
  1096  0069  1C03               	skipc
  1097  006A  286C               	goto	u571
  1098  006B  286D               	goto	u570
  1099  006C                     u571:
  1100  006C  2874               	goto	l1041
  1101  006D                     u570:
  1102  006D                     l1037:
  1103  006D  0820               	movf	___awdiv@divisor,w
  1104  006E  02A2               	subwf	___awdiv@dividend,f
  1105  006F  0821               	movf	___awdiv@divisor+1,w
  1106  0070  1C03               	skipc
  1107  0071  03A3               	decf	___awdiv@dividend+1,f
  1108  0072  02A3               	subwf	___awdiv@dividend+1,f
  1109  0073                     l1039:
  1110  0073  1426               	bsf	___awdiv@quotient,0
  1111  0074                     l1041:
  1112  0074  3001               	movlw	1
  1113  0075                     u585:
  1114  0075  1003               	clrc
  1115  0076  0CA1               	rrf	___awdiv@divisor+1,f
  1116  0077  0CA0               	rrf	___awdiv@divisor,f
  1117  0078  3EFF               	addlw	-1
  1118  0079  1D03               	skipz
  1119  007A  2875               	goto	u585
  1120  007B                     l1043:
  1121  007B  3001               	movlw	1
  1122  007C  02A4               	subwf	___awdiv@counter,f
  1123  007D  1D03               	btfss	3,2
  1124  007E  2880               	goto	u591
  1125  007F  2881               	goto	u590
  1126  0080                     u591:
  1127  0080  285C               	goto	l1035
  1128  0081                     u590:
  1129  0081                     l1045:
  1130  0081  0825               	movf	___awdiv@sign,w
  1131  0082  1903               	btfsc	3,2
  1132  0083  2885               	goto	u601
  1133  0084  2886               	goto	u600
  1134  0085                     u601:
  1135  0085  288B               	goto	l1049
  1136  0086                     u600:
  1137  0086                     l1047:
  1138  0086  09A6               	comf	___awdiv@quotient,f
  1139  0087  09A7               	comf	___awdiv@quotient+1,f
  1140  0088  0AA6               	incf	___awdiv@quotient,f
  1141  0089  1903               	skipnz
  1142  008A  0AA7               	incf	___awdiv@quotient+1,f
  1143  008B                     l1049:
  1144  008B  0827               	movf	___awdiv@quotient+1,w
  1145  008C  00A1               	movwf	?___awdiv+1
  1146  008D  0826               	movf	___awdiv@quotient,w
  1147  008E  00A0               	movwf	?___awdiv
  1148  008F                     l328:
  1149  008F  0008               	return
  1150  0090                     __end_of___awdiv:
  1151                           
  1152                           	psect	text5
  1153  0090                     __ptext5:	
  1154 ;; *************** function _isr *****************
  1155 ;; Defined at:
  1156 ;;		line 57 in file "Lab_08.c"
  1157 ;; Parameters:    Size  Location     Type
  1158 ;;		None
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;		None
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  1    wreg      void 
  1163 ;; Registers used:
  1164 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1165 ;; Tracked objects:
  1166 ;;		On entry : 0/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1170 ;;      Params:         0       0       0       0       0
  1171 ;;      Locals:         0       0       0       0       0
  1172 ;;      Temps:          4       0       0       0       0
  1173 ;;      Totals:         4       0       0       0       0
  1174 ;;Total ram usage:        4 bytes
  1175 ;; Hardware stack levels used:    1
  1176 ;; This function calls:
  1177 ;;		Nothing
  1178 ;; This function is called by:
  1179 ;;		Interrupt level 1
  1180 ;; This function uses a non-reentrant model
  1181 ;;
  1182                           
  1183                           
  1184                           ;psect for function _isr
  1185  0090                     _isr:
  1186  0090                     i1l963:
  1187                           
  1188                           ;Lab_08.c: 59:     if(T0IF == 1)
  1189  0090  1D0B               	btfss	11,2	;volatile
  1190  0091  2893               	goto	u45_21
  1191  0092  2894               	goto	u45_20
  1192  0093                     u45_21:
  1193  0093  28C6               	goto	i1l991
  1194  0094                     u45_20:
  1195  0094                     i1l965:
  1196                           
  1197                           ;Lab_08.c: 60:     {;Lab_08.c: 61:         PORTBbits.RB2 = 0;
  1198  0094  1283               	bcf	3,5	;RP0=0, select bank0
  1199  0095  1303               	bcf	3,6	;RP1=0, select bank0
  1200  0096  1106               	bcf	6,2	;volatile
  1201                           
  1202                           ;Lab_08.c: 62:         PORTBbits.RB0 = 1;
  1203  0097  1406               	bsf	6,0	;volatile
  1204  0098                     i1l967:
  1205                           
  1206                           ;Lab_08.c: 63:         PORTD = (tabla[centenas]);
  1207  0098  0837               	movf	_centenas,w
  1208  0099  3E2B               	addlw	(low (_tabla| 0))& (0+255)
  1209  009A  0084               	movwf	4
  1210  009B  1383               	bcf	3,7	;select IRP bank0
  1211  009C  0800               	movf	0,w
  1212  009D  0088               	movwf	8	;volatile
  1213  009E                     i1l969:
  1214                           
  1215                           ;Lab_08.c: 64:         multi = 0b00000001;
  1216  009E  3001               	movlw	1
  1217  009F  00F5               	movwf	_multi
  1218  00A0  3000               	movlw	0
  1219  00A1  00F6               	movwf	_multi+1
  1220  00A2                     i1l971:
  1221                           
  1222                           ;Lab_08.c: 66:         if (multi == 0b00000001)
  1223  00A2  0375               	decf	_multi,w
  1224  00A3  0476               	iorwf	_multi+1,w
  1225  00A4  1D03               	btfss	3,2
  1226  00A5  28A7               	goto	u46_21
  1227  00A6  28A8               	goto	u46_20
  1228  00A7                     u46_21:
  1229  00A7  28B3               	goto	i1l979
  1230  00A8                     u46_20:
  1231  00A8                     i1l973:
  1232                           
  1233                           ;Lab_08.c: 67:         {;Lab_08.c: 68:             PORTBbits.RB0 = 0;
  1234  00A8  1006               	bcf	6,0	;volatile
  1235                           
  1236                           ;Lab_08.c: 69:             PORTBbits.RB1 = 1;
  1237  00A9  1486               	bsf	6,1	;volatile
  1238  00AA                     i1l975:
  1239                           
  1240                           ;Lab_08.c: 70:             PORTD = (tabla[decenas]);
  1241  00AA  0836               	movf	_decenas,w
  1242  00AB  3E2B               	addlw	(low (_tabla| 0))& (0+255)
  1243  00AC  0084               	movwf	4
  1244  00AD  0800               	movf	0,w
  1245  00AE  0088               	movwf	8	;volatile
  1246  00AF                     i1l977:
  1247                           
  1248                           ;Lab_08.c: 71:             multi = 0b00000010;
  1249  00AF  3002               	movlw	2
  1250  00B0  00F5               	movwf	_multi
  1251  00B1  3000               	movlw	0
  1252  00B2  00F6               	movwf	_multi+1
  1253  00B3                     i1l979:
  1254                           
  1255                           ;Lab_08.c: 73:         if (multi == 0b00000010)
  1256  00B3  3002               	movlw	2
  1257  00B4  0675               	xorwf	_multi,w
  1258  00B5  0476               	iorwf	_multi+1,w
  1259  00B6  1D03               	btfss	3,2
  1260  00B7  28B9               	goto	u47_21
  1261  00B8  28BA               	goto	u47_20
  1262  00B9                     u47_21:
  1263  00B9  28C3               	goto	i1l987
  1264  00BA                     u47_20:
  1265  00BA                     i1l981:
  1266                           
  1267                           ;Lab_08.c: 74:         {;Lab_08.c: 75:             PORTBbits.RB1 = 0;
  1268  00BA  1086               	bcf	6,1	;volatile
  1269                           
  1270                           ;Lab_08.c: 76:             PORTBbits.RB2 = 1;
  1271  00BB  1506               	bsf	6,2	;volatile
  1272  00BC                     i1l983:
  1273                           
  1274                           ;Lab_08.c: 77:             PORTD = (tabla[unidades]);
  1275  00BC  0835               	movf	_unidades,w
  1276  00BD  3E2B               	addlw	(low (_tabla| 0))& (0+255)
  1277  00BE  0084               	movwf	4
  1278  00BF  0800               	movf	0,w
  1279  00C0  0088               	movwf	8	;volatile
  1280  00C1                     i1l985:
  1281                           
  1282                           ;Lab_08.c: 78:             multi = 0b00000000;
  1283  00C1  01F5               	clrf	_multi
  1284  00C2  01F6               	clrf	_multi+1
  1285  00C3                     i1l987:
  1286                           
  1287                           ;Lab_08.c: 80:         INTCONbits.T0IF = 0;
  1288  00C3  110B               	bcf	11,2	;volatile
  1289  00C4                     i1l989:
  1290                           
  1291                           ;Lab_08.c: 81:         TMR0 = 255;
  1292  00C4  30FF               	movlw	255
  1293  00C5  0081               	movwf	1	;volatile
  1294  00C6                     i1l991:
  1295                           
  1296                           ;Lab_08.c: 83:        if(PIR1bits.ADIF == 1)
  1297  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  1298  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  1299  00C8  1F0C               	btfss	12,6	;volatile
  1300  00C9  28CB               	goto	u48_21
  1301  00CA  28CC               	goto	u48_20
  1302  00CB                     u48_21:
  1303  00CB  28EB               	goto	i1l75
  1304  00CC                     u48_20:
  1305  00CC                     i1l993:
  1306                           
  1307                           ;Lab_08.c: 84:        {;Lab_08.c: 85:            if(ADCON0bits.CHS == 0){
  1308  00CC  0C1F               	rrf	31,w	;volatile
  1309  00CD  00F0               	movwf	??_isr
  1310  00CE  0C70               	rrf	??_isr,w
  1311  00CF  390F               	andlw	15
  1312  00D0  3A00               	xorlw	0
  1313  00D1  1D03               	skipz
  1314  00D2  28D4               	goto	u49_21
  1315  00D3  28D5               	goto	u49_20
  1316  00D4                     u49_21:
  1317  00D4  28D7               	goto	i1l997
  1318  00D5                     u49_20:
  1319  00D5                     i1l995:
  1320                           
  1321                           ;Lab_08.c: 86:                PORTC = ADRESH;
  1322  00D5  081E               	movf	30,w	;volatile
  1323  00D6  0087               	movwf	7	;volatile
  1324  00D7                     i1l997:
  1325                           
  1326                           ;Lab_08.c: 89:            if(ADCON0bits.CHS == 1){
  1327  00D7  0C1F               	rrf	31,w	;volatile
  1328  00D8  00F0               	movwf	??_isr
  1329  00D9  0C70               	rrf	??_isr,w
  1330  00DA  390F               	andlw	15
  1331  00DB  3A01               	xorlw	1
  1332  00DC  1D03               	skipz
  1333  00DD  28DF               	goto	u50_21
  1334  00DE  28E0               	goto	u50_20
  1335  00DF                     u50_21:
  1336  00DF  28E4               	goto	i1l1001
  1337  00E0                     u50_20:
  1338  00E0                     i1l999:
  1339                           
  1340                           ;Lab_08.c: 90:                contador = ADRESH;
  1341  00E0  081E               	movf	30,w	;volatile
  1342  00E1  00F0               	movwf	??_isr
  1343  00E2  0870               	movf	??_isr,w
  1344  00E3  00F8               	movwf	_contador
  1345  00E4                     i1l1001:
  1346                           
  1347                           ;Lab_08.c: 93:            ADCON0bits.GO = 1;
  1348  00E4  149F               	bsf	31,1	;volatile
  1349  00E5                     i1l1003:
  1350                           
  1351                           ;Lab_08.c: 94:            PIR1bits.ADIF = 0;
  1352  00E5  130C               	bcf	12,6	;volatile
  1353                           
  1354                           ;Lab_08.c: 95:            _delay((unsigned long)((50)*(4000000/4000000.0)));
  1355  00E6  3010               	movlw	16
  1356  00E7  00F0               	movwf	??_isr
  1357  00E8                     u70_27:
  1358  00E8  0BF0               	decfsz	??_isr,f
  1359  00E9  28E8               	goto	u70_27
  1360  00EA  0000               	nop
  1361  00EB                     i1l75:
  1362  00EB  0873               	movf	??_isr+3,w
  1363  00EC  008A               	movwf	10
  1364  00ED  0872               	movf	??_isr+2,w
  1365  00EE  0084               	movwf	4
  1366  00EF  0E71               	swapf	??_isr+1,w
  1367  00F0  0083               	movwf	3
  1368  00F1  0EFE               	swapf	btemp,f
  1369  00F2  0E7E               	swapf	btemp,w
  1370  00F3  0009               	retfie
  1371  00F4                     __end_of_isr:
  1372  007E                     btemp	set	126	;btemp
  1373  007E                     wtemp0	set	126
  1374                           
  1375                           	psect	intentry
  1376  0004                     __pintentry:	
  1377                           ;incstack = 0
  1378                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1379                           
  1380  0004                     interrupt_function:
  1381  007E                     saved_w	set	btemp
  1382  0004  00FE               	movwf	btemp
  1383  0005  0E03               	swapf	3,w
  1384  0006  00F1               	movwf	??_isr+1
  1385  0007  0804               	movf	4,w
  1386  0008  00F2               	movwf	??_isr+2
  1387  0009  080A               	movf	10,w
  1388  000A  00F3               	movwf	??_isr+3
  1389  000B  120A  118A  2890   	ljmp	_isr
  1390                           
  1391                           	psect	config
  1392                           
  1393                           ;Config register CONFIG1 @ 0x2007
  1394                           ;	Oscillator Selection bits
  1395                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1396                           ;	Watchdog Timer Enable bit
  1397                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1398                           ;	Power-up Timer Enable bit
  1399                           ;	PWRTE = OFF, PWRT disabled
  1400                           ;	RE3/MCLR pin function select bit
  1401                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1402                           ;	Code Protection bit
  1403                           ;	CP = OFF, Program memory code protection is disabled
  1404                           ;	Data Code Protection bit
  1405                           ;	CPD = OFF, Data memory code protection is disabled
  1406                           ;	Brown Out Reset Selection bits
  1407                           ;	BOREN = OFF, BOR disabled
  1408                           ;	Internal External Switchover bit
  1409                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1410                           ;	Fail-Safe Clock Monitor Enabled bit
  1411                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1412                           ;	Low Voltage Programming Enable bit
  1413                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1414                           ;	In-Circuit Debugger Mode bit
  1415                           ;	DEBUG = 0x1, unprogrammed default
  1416  2007                     	org	8199
  1417  2007  20D4               	dw	8404
  1418                           
  1419                           ;Config register CONFIG2 @ 0x2008
  1420                           ;	Brown-out Reset Selection bit
  1421                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1422                           ;	Flash Program Memory Self Write Enable bits
  1423                           ;	WRT = OFF, Write protection off
  1424  2008                     	org	8200
  1425  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         4
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     11      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _division->___awdiv
    _division->___awmod

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_division
    _division->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1598
                           _division
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _division                                             3     3      0    1598
                                              8 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     793
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _division
     ___awdiv
     ___awmod
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      18       5       30.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      22      12        0.0%
ABS                  0      0      22       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Apr 20 01:49:36 2021

                      pc 0002                       l80 01F8                       l86 01DC  
                     l89 014E             ___awdiv@sign 0025                       fsr 0004  
                    l341 01A9                      l328 008F                      l801 01C8  
                    l811 01CD                      l803 01C9                      l821 01D4  
                    l813 01CE                      l805 01CA                      l823 01D5  
                    l815 01CF                      l807 01CB                      l825 01D7  
                    l817 01D2                      l809 01CC                      l827 01DA  
                    l819 01D3                      l771 01B5                      l763 01AA  
                    l829 01DB                      l781 01BC                      l773 01B6  
                    l765 01B0                      l791 01C3                      l783 01BD  
                    l775 01B7                      l767 01B3                      l793 01C4  
                    l785 01BE                      l777 01B8                      l769 01B4  
                    l795 01C5                      l787 01BF                      l779 01B9  
                    l797 01C6                      l789 01C2                      l799 01C7  
                    u510 002E                      u511 002D                      u600 0086  
                    u520 0039                      u601 0085                      u521 0038  
                    u530 004A                      u610 0156                      u531 0049  
                    u611 0155                      u620 0161                      u621 0160  
                    u550 005C                      u630 016C                      u551 005B  
                    u631 016B                      u545 004E                      u570 006D  
                    u650 017E                      u571 006C                      u651 017D  
                    u660 0188                      u565 005D                      u661 0187  
                    u645 0170                      u590 0081                      u591 0080  
                    u575 0069                      u680 019B                      u585 0075  
                    u681 019A                      u665 0184                      u690 01A0  
                    u691 019F                      u675 018F                      _isr 0090  
                    _res 0079                      fsr0 0004                      indf 0000  
           ___awmod@sign 0025                     l1011 002A                     l1021 003E  
                   l1013 002E                     l1031 0054                     l1023 0042  
                   l1015 0033                     l1041 0074                     l1033 0058  
                   l1025 0044                     l1017 0035                     l1009 0027  
                   l1043 007B                     l1035 005C                     l1027 004A  
                   l1019 0039                     l1037 006D                     l1029 004D  
                   l1045 0081                     l1061 015D                     l1053 014F  
                   l1047 0086                     l1039 0073                     l1071 0176  
                   l1063 0161                     l1055 0152                     l1049 008B  
                   l1081 0195                     l1073 017A                     l1065 0166  
                   l1057 0156                     l1075 017E                     l1067 016C  
                   l1083 019B                     l1059 015B                     l1091 00F4  
                   l1085 01A0                     l1077 0188                     l1069 016F  
                   l1093 01F0                     l1087 01A5                     l1079 018E  
                   l1095 01F5                     ?_isr 0070                     _T0IF 005A  
                   i1l75 00EB                     _TMR0 0001                     _main 01F0  
                   _pot2 0077                     btemp 007E                     start 000E  
                  ??_isr 0070                    ?_main 0070          __end_of___awdiv 0090  
        __end_of___awmod 01AA                    _ANSEL 0188          ___awdiv@divisor 0020  
                  i1l971 00A2                    i1l963 0090                    i1l981 00BA  
                  i1l973 00A8                    i1l965 0094                    i1l983 00BC  
                  i1l975 00AA                    i1l967 0098                    i1l991 00C6  
                  i1l993 00CC                    i1l985 00C1                    i1l977 00AF  
                  i1l969 009E                    i1l995 00D5                    i1l987 00C3  
                  i1l979 00B3                    i1l997 00D7                    i1l989 00C4  
                  i1l999 00E0          ___awdiv@counter 0024                    u50_20 00E0  
                  u50_21 00DF                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    u45_20 0094  
                  u45_21 0093                    u46_20 00A8                    u46_21 00A7  
                  u70_27 00E8                    u47_20 00BA                    u47_21 00B9  
                  u48_20 00CC                    u48_21 00CB                    u49_20 00D5  
                  u49_21 00D4                    _TRISC 0087                    _TRISD 0088  
                  _tabla 002B                    _multi 0075                    _setup 01AA  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 0201                   ??_main 0075  
                 _ADRESH 001E         ___awdiv@dividend 0022                   ?_setup 0070  
                 _ANSELH 0189                   i1l1001 00E4                   i1l1003 00E5  
       __end_of_division 014F                ??___awdiv 0074                ??___awmod 0074  
       ___awdiv@quotient 0026          ___awmod@divisor 0020          ___awmod@counter 0024  
                 saved_w 007E  __end_of__initialization 0023           __pcstackCOMMON 0070  
           __pidataBANK0 0201            __end_of_setup 01DD           _OPTION_REGbits 0081  
                ??_setup 0074               __pnvCOMMON 0079               __pmaintext 01F0  
             __pintentry 0004                ?_division 0070                  ___awdiv 0027  
                ___awmod 014F                  _decenas 0036                  __ptext1 01AA  
                __ptext2 00F4                  __ptext3 014F                  __ptext4 0027  
                __ptext5 0090             __size_of_isr 0064         ___awmod@dividend 0022  
   end_of_initialization 0023               ??_division 0028                _PORTBbits 0006  
              _TRISAbits 0085                _TRISBbits 0086      start_initialization 0011  
            __end_of_isr 00F4               init_fetch0 01DD              __pdataBANK0 002B  
            __pbssCOMMON 0075                ___latbits 0002            __pcstackBANK0 0020  
      __size_of_division 005B                __pnvBANK0 0035                 ?___awdiv 0020  
               ?___awmod 0020           __size_of_setup 0033        interrupt_function 0004  
               _PIE1bits 008C                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F         __size_of___awdiv 0069         __size_of___awmod 005B  
               _centenas 0037                 _division 00F4                 _contador 0078  
          __size_of_main 0011                 _unidades 0035               _INTCONbits 000B  
               init_ram0 01E1                 intlevel1 0000               _OSCCONbits 008F  
